{"version":3,"sources":["../../../src/components/collaborative-editing/index.js"],"names":["ToolbarSlot","useYjs","CollaborativeEditingAvatars","CollaborativeEditing","settings"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,2BAAP,MAAwC,sBAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA,SAASC,oBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA8C;AAC7CH,EAAAA,MAAM,CAAE;AACPG,IAAAA;AADO,GAAF,CAAN;AAIA,SACC,cAAC,WAAD,QACC,cAAC,2BAAD,OADD,CADD;AAKA;;AAED,eAAeD,oBAAf","sourcesContent":["/**\n * Internal dependencies\n */\nimport { ToolbarSlot } from '../..';\nimport useYjs from './use-yjs';\nimport CollaborativeEditingAvatars from './components/avatars';\n\n/**\n * Real-time collaboration settings\n * @typedef CollaborationSettings\n * @property {boolean} enabled\n * @property {string} [channelId] Optional channel id to pass to transport.connect().\n * @property {string} username Name displayed to peers. Required if collab is enabled.\n * @property {string} [caretColor] Color of the caret indicator displayed to peers. If unspecified, a random color will be selected.\n * @property {string} [avatarUrl] Url of the avatar image diplayed to peers.\n * @property {CollaborationTransport} transport Required if collab is enabled.\n */\n\n/**\n * Transport module for real-time collaboration\n * @typedef CollaborationTransport\n * @property {(message: CollaborationTransportDocMessage|CollaborationTransportSelectionMessage) => void} sendMessage\n * @property {(options: CollaborationTransportConnectOpts) => Promise<{isFirstInChannel: boolean}>} connect\n * @property {() => Promise<void>} disconnect\n *\n * @typedef CollaborationTransportConnectOpts\n * @property {object} user\n * @property {string} user.identity\n * @property {string} user.name\n * @property {string} [user.avatarUrl]\n * @property {string} [user.color] Color of the caret indicator displayed to peers.\n * @property {(message: object) => void} onReceiveMessage Callback to run when a message is received.\n * @property {(peers: AvailablePeer[]) => void} setAvailablePeers Callback to run when peers change.\n * @property {string} [channelId]\n *\n * @typedef AvailablePeer\n * @property {string} id\n * @property {string} name\n * @property {string} color\n * @property {string} [avatarUrl]\n *\n * @typedef CollaborationTransportDocMessage\n * @property {string} identity\n * @property {'doc'} type\n * @property {object} message\n *\n * @typedef CollaborationTransportSelectionMessage\n * @property {string} identity\n * @property {'selection'} type\n * @property {EditorSelection} selection\n *\n * @typedef EditorSelection\n * @property {object} start\n * @property {object} end\n */\n\n/**\n * @param {object} props\n * @param {CollaborationSettings} props.settings\n */\nfunction CollaborativeEditing( { settings } ) {\n\tuseYjs( {\n\t\tsettings,\n\t} );\n\n\treturn (\n\t\t<ToolbarSlot>\n\t\t\t<CollaborativeEditingAvatars />\n\t\t</ToolbarSlot>\n\t);\n}\n\nexport default CollaborativeEditing;\n"],"file":"index.js"}