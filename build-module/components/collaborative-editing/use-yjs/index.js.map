{"version":3,"sources":["../../../../src/components/collaborative-editing/use-yjs/index.js"],"names":["v4","uuidv4","noop","sample","createDocument","postDocToObject","updatePostDoc","useDispatch","useSelect","useEffect","useRef","addCollabFilters","registerCollabFormats","debug","require","defaultColors","initYDoc","getBlocks","onRemoteDataChange","settings","setPeerSelection","setAvailablePeers","channelId","transport","identity","doc","applyDataChanges","getData","sendMessage","message","type","onReceiveMessage","data","receiveMessage","selection","changes","blocks","connect","user","name","username","color","caretColor","avatarUrl","peers","then","isFirstInChannel","startSharing","title","applyChangesToYjs","getState","sendSelection","start","end","disconnect","window","addEventListener","useYjs","onBlocksChange","onSelectionChange","getFormatType","selectionStart","selectionEnd","select","getSelectionStart","getSelectionEnd","updateBlocksWithUndo","enabled","console","error","onUnmount","current"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { v4 as uuidv4 } from 'uuid';\nimport { noop, sample } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { createDocument } from './yjs-doc';\nimport { postDocToObject, updatePostDoc } from './algorithms/yjs';\n\n/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { addCollabFilters } from './filters';\nimport { registerCollabFormats } from './formats';\n\nconst debug = require( 'debug' )( 'iso-editor:collab' );\n\n/** @typedef {import('..').CollaborationSettings} CollaborationSettings */\n/** @typedef {import('..').CollaborationTransport} CollaborationTransport */\n/** @typedef {import('..').CollaborationTransportDocMessage} CollaborationTransportDocMessage */\n/** @typedef {import('..').CollaborationTransportSelectionMessage} CollaborationTransportSelectionMessage */\n/** @typedef {import('..').EditorSelection} EditorSelection */\n/** @typedef {import('../../block-editor-contents').OnUpdate} OnUpdate */\n\nexport const defaultColors = [ '#4676C0', '#6F6EBE', '#9063B6', '#C3498D', '#9E6D14', '#3B4856', '#4A807A' ];\n\n/**\n * @param {Object} opts - Hook options\n * @param {() => object[]} opts.getBlocks - Content to initialize the Yjs doc with.\n * @param {OnUpdate} opts.onRemoteDataChange - Function to update editor blocks in redux state.\n * @param {CollaborationSettings} opts.settings\n * @param {import('../../../store/peers/actions').setAvailablePeers} opts.setAvailablePeers\n * @param {import('../../../store/peers/actions').setPeerSelection} opts.setPeerSelection\n * @typedef IsoEditorSelection\n * @property {Object} selectionStart\n * @property {Object} selectionEnd\n */\nasync function initYDoc( { getBlocks, onRemoteDataChange, settings, setPeerSelection, setAvailablePeers } ) {\n\tconst { channelId, transport } = settings;\n\n\t/** @type {string} */\n\tconst identity = uuidv4();\n\n\tdebug( `initYDoc (identity: ${ identity })` );\n\n\tconst doc = createDocument( {\n\t\tidentity,\n\t\tapplyDataChanges: updatePostDoc,\n\t\tgetData: postDocToObject,\n\t\t/** @param {Object} message */\n\t\tsendMessage: ( message ) => {\n\t\t\tdebug( 'sendDocMessage', message );\n\t\t\ttransport.sendMessage( { type: 'doc', identity, message } );\n\t\t},\n\t} );\n\n\t/** @param {CollaborationTransportDocMessage|CollaborationTransportSelectionMessage} data */\n\tconst onReceiveMessage = ( data ) => {\n\t\tdebug( 'remote change received by transport', data );\n\n\t\tswitch ( data.type ) {\n\t\t\tcase 'doc': {\n\t\t\t\tdoc.receiveMessage( data.message );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'selection': {\n\t\t\t\tsetPeerSelection( data.identity, data.selection );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tdoc.onRemoteDataChange( ( changes ) => {\n\t\tdebug( 'remote change received by ydoc', changes );\n\t\tonRemoteDataChange( changes.blocks );\n\t} );\n\n\treturn transport\n\t\t.connect( {\n\t\t\tuser: {\n\t\t\t\tidentity,\n\t\t\t\tname: settings.username,\n\t\t\t\tcolor: settings.caretColor || sample( defaultColors ),\n\t\t\t\tavatarUrl: settings.avatarUrl,\n\t\t\t},\n\t\t\tonReceiveMessage,\n\t\t\tsetAvailablePeers: ( peers ) => {\n\t\t\t\tdebug( 'setAvailablePeers', peers );\n\t\t\t\tsetAvailablePeers( peers );\n\t\t\t},\n\t\t\tchannelId,\n\t\t} )\n\t\t.then( ( { isFirstInChannel } ) => {\n\t\t\tdebug( `connected (channelId: ${ channelId })` );\n\n\t\t\tif ( isFirstInChannel ) {\n\t\t\t\tdebug( 'first in channel' );\n\n\t\t\t\t// Fetching the blocks from redux now, after the transport has successfully connected,\n\t\t\t\t// ensures that we don't initialize the Yjs doc with stale blocks.\n\t\t\t\t// (This can happen if <IsolatedBlockEditor> is given an onLoad handler.)\n\t\t\t\tdoc.startSharing( { title: '', blocks: getBlocks() } );\n\t\t\t} else {\n\t\t\t\tdoc.connect();\n\t\t\t}\n\n\t\t\tconst applyChangesToYjs = ( blocks ) => {\n\t\t\t\tif ( doc.getState() !== 'on' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdebug( 'local changes applied to ydoc' );\n\t\t\t\tdoc.applyDataChanges( { blocks } );\n\t\t\t};\n\n\t\t\tconst sendSelection = ( start, end ) => {\n\t\t\t\tdebug( 'sendSelection', start, end );\n\t\t\t\ttransport.sendMessage( {\n\t\t\t\t\ttype: 'selection',\n\t\t\t\t\tidentity,\n\t\t\t\t\tselection: {\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t};\n\n\t\t\tconst disconnect = () => {\n\t\t\t\ttransport.disconnect();\n\t\t\t\tdoc.disconnect();\n\t\t\t};\n\n\t\t\twindow.addEventListener( 'beforeunload', () => disconnect() );\n\n\t\t\treturn { applyChangesToYjs, sendSelection, disconnect };\n\t\t} );\n}\n\n/**\n * @param {Object} opts - Hook options\n * @param {CollaborationSettings} [opts.settings]\n */\nexport default function useYjs( { settings } ) {\n\tconst onBlocksChange = useRef( noop );\n\tconst onSelectionChange = useRef( noop );\n\n\tconst { blocks, getBlocks, getFormatType, selectionStart, selectionEnd } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tblocks: select( 'isolated/editor' ).getBlocks(),\n\t\t\tgetBlocks: select( 'isolated/editor' ).getBlocks,\n\t\t\tgetFormatType: select( 'core/rich-text' ).getFormatType,\n\t\t\tselectionStart: select( 'core/block-editor' ).getSelectionStart(),\n\t\t\tselectionEnd: select( 'core/block-editor' ).getSelectionEnd(),\n\t\t};\n\t}, [] );\n\n\tconst { setAvailablePeers, setPeerSelection, updateBlocksWithUndo } = useDispatch( 'isolated/editor' );\n\n\tuseEffect( () => {\n\t\tif ( ! settings?.enabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! settings.transport ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( `Collaborative editor is disabled because a transport module wasn't provided.` );\n\t\t\treturn;\n\t\t}\n\n\t\tdebug( 'registered collab formats' );\n\t\tregisterCollabFormats( getFormatType );\n\n\t\tdebug( 'added collab filters' );\n\t\taddCollabFilters();\n\n\t\tlet onUnmount = noop;\n\n\t\tinitYDoc( {\n\t\t\tonRemoteDataChange: updateBlocksWithUndo,\n\t\t\tsettings,\n\t\t\tgetBlocks,\n\t\t\tsetPeerSelection,\n\t\t\tsetAvailablePeers,\n\t\t} ).then( ( { applyChangesToYjs, sendSelection, disconnect } ) => {\n\t\t\tonUnmount = () => {\n\t\t\t\tdebug( 'unmount' );\n\t\t\t\tdisconnect();\n\t\t\t};\n\n\t\t\tonBlocksChange.current = applyChangesToYjs;\n\t\t\tonSelectionChange.current = sendSelection;\n\t\t} );\n\n\t\treturn () => onUnmount();\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tonBlocksChange.current( blocks );\n\t}, [ blocks ] );\n\n\tuseEffect( () => {\n\t\tonSelectionChange.current( selectionStart, selectionEnd );\n\t}, [ selectionStart, selectionEnd ] );\n}\n"],"file":"index.js"}