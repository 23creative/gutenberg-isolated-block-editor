{"version":3,"sources":["../../../../../src/components/collaborative-editing/use-yjs/__test-helpers__/utils.js"],"names":["waitFor","getTransports","count","peers","getAvailablePeers","excludeId","Object","values","reduce","acc","p","user","id","mockTransport","transport","_identity","undefined","connect","jest","fn","onReceiveMessage","setAvailablePeers","identity","keys","forEach","Promise","resolve","isFirstInChannel","length","sendMessage","data","disconnect","Array","fill","map","pauseTyping","screen","getAllByRole","el","blur","setTimeout"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { waitFor } from '@testing-library/react';\n\n/**\n * Helper to generate mock transport modules for an isolated channel.\n *\n * @param {number} count - Number of transport modules to generate.\n * @return {Object[]} - Array of transport modules.\n */\nexport function getTransports( count ) {\n\tconst peers = {};\n\n\tconst getAvailablePeers = ( excludeId ) =>\n\t\tObject.values( peers ).reduce( ( acc, p ) => {\n\t\t\tif ( p.user.id === excludeId ) return acc;\n\t\t\treturn [ ...acc, p.user ];\n\t\t}, [] );\n\n\tconst mockTransport = () => {\n\t\tconst transport = {\n\t\t\t_identity: undefined,\n\t\t\tconnect: jest.fn( ( { onReceiveMessage, setAvailablePeers, user } ) => {\n\t\t\t\ttransport._identity = user.identity;\n\t\t\t\tpeers[ user.identity ] = { onReceiveMessage, setAvailablePeers, user: { ...user, id: user.identity } };\n\t\t\t\tObject.keys( peers ).forEach( ( identity ) => {\n\t\t\t\t\tpeers[ identity ].setAvailablePeers( getAvailablePeers( identity ) );\n\t\t\t\t} );\n\t\t\t\treturn Promise.resolve( { isFirstInChannel: Object.keys( peers ).length === 1 } );\n\t\t\t} ),\n\t\t\tsendMessage: jest.fn( ( data ) => {\n\t\t\t\t// console.log( data.message.messageType, data.identity.substring( 0, 4 ) );\n\t\t\t\tObject.keys( peers ).forEach( ( identity ) => {\n\t\t\t\t\tif ( identity !== data.identity ) {\n\t\t\t\t\t\tpeers[ identity ].onReceiveMessage( data );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} ),\n\t\t\tdisconnect: jest.fn( () => {\n\t\t\t\tdelete peers[ transport._identity ];\n\t\t\t\tObject.keys( peers ).forEach( ( identity ) => {\n\t\t\t\t\tpeers[ identity ].setAvailablePeers( getAvailablePeers( identity ) );\n\t\t\t\t} );\n\t\t\t} ),\n\t\t};\n\n\t\treturn transport;\n\t};\n\n\treturn Array( count )\n\t\t.fill( null )\n\t\t.map( () => mockTransport() );\n}\n\n/**\n * Emulate a pause between typing events for Yjs to make a new undo stack item.\n *\n * Requires jest.useRealTimers().\n *\n * @param {import('@testing-library/dom').Screen} screen\n */\nexport async function pauseTyping( screen ) {\n\tscreen.getAllByRole( 'document' ).forEach( ( el ) => el.blur() );\n\tawait waitFor( () => new Promise( ( resolve ) => setTimeout( resolve, 550 ) ) );\n}\n"],"file":"utils.js"}