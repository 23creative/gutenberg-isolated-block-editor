{"version":3,"sources":["../../../src/components/block-editor-toolbar/index.js"],"names":["useEffect","Button","cog","__","useSelect","useDispatch","MoreMenu","HeaderToolbar","Inspector","BlockEditorToolbar","props","settings","editorMode","renderMoreMenu","shortcut","inspector","documentInspector","iso","toolbar","moreMenu","setInspecting","isInspecting","isBlockSelected","select","getBlockSelectionStart"],"mappings":";;AAAA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AAEA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,cAAP;AAEA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAKC,KAAF,IAAa;AAAA;;AACvC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA;AAAxB,MAA2CH,KAAjD;AACA,QAAMI,QAAQ,GAAG,GAAjB;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAmC,kBAAAL,QAAQ,CAACM,GAAT,gEAAcC,OAAd,KAAyB,EAAlE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeR,QAAQ,CAACM,GAAT,IAAgB,EAArC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAoBf,WAAW,CAAE,iBAAF,CAArC;AACA,QAAM;AAAEgB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoClB,SAAS,CAChDmB,MAAF,KAAgB;AACfF,IAAAA,YAAY,EAAEE,MAAM,CAAE,iBAAF,CAAN,CAA4BF,YAA5B,EADC;AAEfC,IAAAA,eAAe,EAAE,CAAC,CAAEC,MAAM,CAAE,mBAAF,CAAN,CAA8BC,sBAA9B;AAFL,GAAhB,CADkD,EAKlD,EALkD,CAAnD;AAQAxB,EAAAA,SAAS,CAAE,MAAM;AAChB;AACA,QAAKqB,YAAY,IAAI,CAAEC,eAAvB,EAAyC;AACxCF,MAAAA,aAAa,CAAE,KAAF,CAAb;AACA;AACD,GALQ,EAKN,CAAEE,eAAF,CALM,CAAT;AAOA,SACC;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAkD,IAAA,IAAI,EAAC,QAAvD;AAAgE,IAAA,QAAQ,EAAG,CAAC;AAA5E,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,aAAD;AAAe,IAAA,QAAQ,EAAGX;AAA1B,IADD,CADD,EAKC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGI,SAAS,IACV,cAAC,MAAD;AACC,IAAA,IAAI,EAAGb,GADR;AAEC,IAAA,KAAK,EAAGC,EAAE,CAAE,UAAF,CAFX;AAGC,IAAA,OAAO,EAAG,MAAMiB,aAAa,CAAE,CAAEC,YAAJ,CAH9B;AAIC,IAAA,SAAS,EAAGA,YAJb;AAKC,qBAAgBA,YALjB;AAMC,IAAA,QAAQ,EAAGP,QANZ;AAOC,IAAA,QAAQ,EAAGF,UAAU,KAAK;AAP3B,IAFF,EAaGS,YAAY,IACb,cAAC,SAAD;AAAW,IAAA,iBAAiB,EAAGL,iBAA/B;AAAmD,IAAA,aAAa,EAAGM;AAAnE,IAdF,EAiBGH,QAAQ,IACT,cAAC,QAAD;AACC,IAAA,QAAQ,EAAGR,QADZ;AAEC,IAAA,OAAO,EAAG,MAAMS,aAAa,CAAE,KAAF,CAF9B;AAGC,IAAA,cAAc,EAAGP;AAHlB,IAlBF,CALD,CADD,CADD;AAmCA,CAxDD;;AA0DA,eAAeJ,kBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useEffect } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { cog } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport MoreMenu from './more-menu';\nimport HeaderToolbar from './header-toolbar';\nimport Inspector from './inspector';\nimport './style.scss';\n\n/** @typedef {import('../../store/editor/reducer').EditorMode} EditorMode */\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../index').OnMore} OnMore */\n\n/**\n * Block editor toolbar\n *\n * @param {object} props - Component props\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {EditorMode} props.editorMode - Visual or code?\n * @param {OnMore} props.renderMoreMenu - Callback to render additional items in the more menu\n */\nconst BlockEditorToolbar = ( props ) => {\n\tconst { settings, editorMode, renderMoreMenu } = props;\n\tconst shortcut = 'x';\n\tconst { inspector, documentInspector } = settings.iso?.toolbar || {};\n\tconst { moreMenu } = settings.iso || {};\n\tconst { setInspecting } = useDispatch( 'isolated/editor' );\n\tconst { isInspecting, isBlockSelected } = useSelect(\n\t\t( select ) => ( {\n\t\t\tisInspecting: select( 'isolated/editor' ).isInspecting(),\n\t\t\tisBlockSelected: !! select( 'core/block-editor' ).getBlockSelectionStart(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tuseEffect( () => {\n\t\t// Close the block inspector when no block is selected. Gutenberg gets a bit crashy otherwise\n\t\tif ( isInspecting && ! isBlockSelected ) {\n\t\t\tsetInspecting( false );\n\t\t}\n\t}, [ isBlockSelected ] );\n\n\treturn (\n\t\t<div className=\"edit-post-editor-regions__header\" role=\"region\" tabIndex={ -1 }>\n\t\t\t<div className=\"edit-post-header\">\n\t\t\t\t<div className=\"edit-post-header__toolbar\">\n\t\t\t\t\t<HeaderToolbar settings={ settings } />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"edit-post-header__settings\">\n\t\t\t\t\t{ inspector && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon={ cog }\n\t\t\t\t\t\t\tlabel={ __( 'Settings' ) }\n\t\t\t\t\t\t\tonClick={ () => setInspecting( ! isInspecting ) }\n\t\t\t\t\t\t\tisPressed={ isInspecting }\n\t\t\t\t\t\t\taria-expanded={ isInspecting }\n\t\t\t\t\t\t\tshortcut={ shortcut }\n\t\t\t\t\t\t\tdisabled={ editorMode === 'text' }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isInspecting && (\n\t\t\t\t\t\t<Inspector documentInspector={ documentInspector } blockSelected={ isBlockSelected } />\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ moreMenu && (\n\t\t\t\t\t\t<MoreMenu\n\t\t\t\t\t\t\tsettings={ settings }\n\t\t\t\t\t\t\tonClick={ () => setInspecting( false ) }\n\t\t\t\t\t\t\trenderMoreMenu={ renderMoreMenu }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BlockEditorToolbar;\n"],"file":"index.js"}