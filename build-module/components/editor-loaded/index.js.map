{"version":3,"sources":["../../../src/components/editor-loaded/index.js"],"names":["useEffect","useSelect","EditorLoaded","onLoaded","onLoading","isEditorReady","select"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAvB,EAAiD;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAoBJ,SAAS,CAChCK,MAAF,KAAgB;AACfD,IAAAA,aAAa,EAAEC,MAAM,CAAE,iBAAF,CAAN,CAA4BD,aAA5B;AADA,GAAhB,CADkC,EAIlC,EAJkC,CAAnC;AAOAL,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAKK,aAAL,EAAqB;AACpBF,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACA,KAFD,MAEO;AACNC,MAAAA,SAAS,IAAIA,SAAS,EAAtB;AACA;AACD,GANQ,EAMN,CAAEC,aAAF,CANM,CAAT;AAQA,SAAO,IAAP;AACA;;AAED,eAAeH,YAAf","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * @callback OnLoad\n */\n\n /**\n * Used by clients to add an optional loading placeholder\n *\n * @param {object} props - Component props\n * @param {OnLoad} [props.onLoaded] - Callback to signal that the editor has loaded\n * @param {OnLoad} [props.onLoading] - Callback to signal that the editor is loading\n */\nfunction EditorLoaded( { onLoaded, onLoading } ) {\n\tconst { isEditorReady } = useSelect(\n\t\t( select ) => ( {\n\t\t\tisEditorReady: select( 'isolated/editor' ).isEditorReady(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tuseEffect( () => {\n\t\tif ( isEditorReady ) {\n\t\t\tonLoaded && onLoaded();\n\t\t} else {\n\t\t\tonLoading && onLoading();\n\t\t}\n\t}, [ isEditorReady ] );\n\n\treturn null;\n}\n\nexport default EditorLoaded;\n"],"file":"index.js"}