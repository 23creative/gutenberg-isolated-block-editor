{"version":3,"sources":["../../../src/components/block-editor-container/with-focus-outside.js"],"names":["includes","Component","createHigherOrderComponent","INPUT_BUTTON_TYPES","isFocusNormalizedButton","element","nodeName","type","WrappedComponent","constructor","arguments","bindNode","bind","cancelBlurCheck","queueBlurCheck","normalizeButtonFocus","componentWillUnmount","clearTimeout","blurCheckTimeout","node","event","persist","preventBlurCheck","setTimeout","document","hasFocus","preventDefault","handleFocusOutside","handleFocus","target","isInteractionEnd","render","props"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Input types which are classified as button types, for use in considering\n * whether element is a (focus-normalized) button.\n *\n * @type {string[]}\n */\nconst INPUT_BUTTON_TYPES = [ 'button', 'submit' ];\n\n/**\n * Returns true if the given element is a button element subject to focus\n * normalization, or false otherwise.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n *\n * @param {Element} element Element to test.\n *\n * @return {boolean} Whether element is a button.\n */\nfunction isFocusNormalizedButton( element ) {\n\tswitch ( element.nodeName ) {\n\t\tcase 'A':\n\t\tcase 'BUTTON':\n\t\t\treturn true;\n\n\t\tcase 'INPUT':\n\t\t\treturn includes( INPUT_BUTTON_TYPES, element.type );\n\t}\n\n\treturn false;\n}\n\nexport default createHigherOrderComponent( ( WrappedComponent ) => {\n\treturn class extends Component {\n\t\tconstructor() {\n\t\t\tsuper( ...arguments );\n\n\t\t\tthis.bindNode = this.bindNode.bind( this );\n\t\t\tthis.cancelBlurCheck = this.cancelBlurCheck.bind( this );\n\t\t\tthis.queueBlurCheck = this.queueBlurCheck.bind( this );\n\t\t\tthis.normalizeButtonFocus = this.normalizeButtonFocus.bind( this );\n\t\t}\n\n\t\tcomponentWillUnmount() {\n\t\t\tclearTimeout( this.blurCheckTimeout );\n\t\t}\n\n\t\tbindNode( node ) {\n\t\t\tif ( node ) {\n\t\t\t\tthis.node = node;\n\t\t\t} else {\n\t\t\t\tdelete this.node;\n\t\t\t\tthis.cancelBlurCheck();\n\t\t\t}\n\t\t}\n\n\t\tqueueBlurCheck( event ) {\n\t\t\t// React does not allow using an event reference asynchronously\n\t\t\t// due to recycling behavior, except when explicitly persisted.\n\t\t\tevent.persist();\n\n\t\t\t// Skip blur check if clicking button. See `normalizeButtonFocus`.\n\t\t\tif ( this.preventBlurCheck ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.blurCheckTimeout = setTimeout( () => {\n\t\t\t\t// If document is not focused then focus should remain\n\t\t\t\t// inside the wrapped component and therefore we cancel\n\t\t\t\t// this blur event thereby leaving focus in place.\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Document/hasFocus.\n\t\t\t\tif ( ! document.hasFocus() ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( 'function' === typeof this.node.handleFocusOutside ) {\n\t\t\t\t\tthis.node.handleFocusOutside( event );\n\t\t\t\t}\n\t\t\t}, 0 );\n\t\t}\n\n\t\tcancelBlurCheck() {\n\t\t\tclearTimeout( this.blurCheckTimeout );\n\t\t\tif ( typeof this.node !== 'undefined' && 'function' === typeof this.node.handleFocus ) {\n\t\t\t\tthis.node.handleFocus( event );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles a mousedown or mouseup event to respectively assign and\n\t\t * unassign a flag for preventing blur check on button elements. Some\n\t\t * browsers, namely Firefox and Safari, do not emit a focus event on\n\t\t * button elements when clicked, while others do. The logic here\n\t\t * intends to normalize this as treating click on buttons as focus.\n\t\t *\n\t\t * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n\t\t *\n\t\t * @param {MouseEvent} event Event for mousedown or mouseup.\n\t\t */\n\t\tnormalizeButtonFocus( event ) {\n\t\t\tconst { type, target } = event;\n\n\t\t\tconst isInteractionEnd = includes(\n\t\t\t\t[ 'mouseup', 'touchend' ],\n\t\t\t\ttype\n\t\t\t);\n\n\t\t\tif ( isInteractionEnd ) {\n\t\t\t\tthis.preventBlurCheck = false;\n\t\t\t} else if ( isFocusNormalizedButton( target ) ) {\n\t\t\t\tthis.preventBlurCheck = true;\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\t// Disable reason: See `normalizeButtonFocus` for browser-specific\n\t\t\t// focus event normalization.\n\n\t\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tonFocus={ this.cancelBlurCheck }\n\t\t\t\t\tonMouseDown={ this.normalizeButtonFocus }\n\t\t\t\t\tonMouseUp={ this.normalizeButtonFocus }\n\t\t\t\t\tonTouchStart={ this.normalizeButtonFocus }\n\t\t\t\t\tonTouchEnd={ this.normalizeButtonFocus }\n\t\t\t\t\tonBlur={ this.queueBlurCheck }\n\t\t\t\t>\n\t\t\t\t\t<WrappedComponent ref={ this.bindNode } { ...this.props } />\n\t\t\t\t</div>\n\t\t\t);\n\t\t\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n\t\t}\n\t};\n}, 'withFocusOutside' );\n"],"file":"with-focus-outside.js"}