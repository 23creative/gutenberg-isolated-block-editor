{"version":3,"sources":["../../../src/components/block-editor-container/index.js"],"names":["classnames","__","compose","useResizeObserver","ErrorBoundary","withDispatch","withSelect","ClickOutsideWrapper","BlockEditorContents","HotSwapper","SIZE_LARGE","SIZE_MEDIUM","BlockEditorContainer","props","children","settings","className","onError","renderMoreMenu","onLoad","isEditorReady","editorMode","isEditing","setEditing","hasFixedToolbar","resizeListener","width","classes","select","getEditorMode","isFeatureActive","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\n\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose, useResizeObserver } from '@wordpress/compose';\nimport { ErrorBoundary } from '@wordpress/editor';\nimport { withDispatch, withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport ClickOutsideWrapper from './click-outside';\nimport BlockEditorContents from '../block-editor-contents';\nimport HotSwapper from './hot-swapper';\nimport './style.scss';\n\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../index').OnError} OnError */\n/** @typedef {import('../../index').OnMore} OnMore */\n/** @typedef {import('../../store/editor/reducer').EditorMode} EditorMode */\n/** @typedef {import('../../index').OnLoad} OnLoad */\n\n/**\n * Set editing callback\n * @callback OnSetEditing\n * @param {boolean} isEditing\n */\n\nconst SIZE_LARGE = 720;\nconst SIZE_MEDIUM = 480;\n\n/**\n * Contains the block contents. Handles the hot-swapping of the redux stores, as well as applying the root CSS classes\n *\n * @param {object} props - Component props\n * @param {object} props.children - Child components\n * @param {boolean} props.isEditorReady - The editor is ready for editing\n * @param {boolean} props.isEditing - This editor is being edited in\n * @param {boolean} props.hasFixedToolbar - Has fixed toolbar\n * @param {EditorMode} props.editorMode - 'text' or 'visual'\n * @param {string} props.className - additional class names\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {OnError} props.onError - Error callback\n * @param {OnMore} props.renderMoreMenu - Callback to render additional items in the more menu\n * @param {OnSetEditing} props.setEditing - Set the mode to editing\n * @param {OnLoad} props.onLoad - Load initial blocks\n */\nfunction BlockEditorContainer( props ) {\n\tconst { children, settings, className, onError, renderMoreMenu, onLoad } = props;\n\tconst { isEditorReady, editorMode, isEditing, setEditing, hasFixedToolbar } = props;\n\tconst [ resizeListener, { width } ] = useResizeObserver();\n\tconst classes = classnames( className, {\n\t\t'iso-editor': true,\n\n\t\t'is-large': width >= SIZE_LARGE,\n\t\t'is-medium': width >= SIZE_MEDIUM && width < SIZE_LARGE,\n\t\t'is-small': width < SIZE_MEDIUM,\n\n\t\t'iso-editor__loading': ! isEditorReady,\n\t\t'iso-editor__selected': isEditing,\n\n\t\t// Match Gutenberg\n\t\t'block-editor': true,\n\t\t'edit-post-layout': true,\n\t\t'has-fixed-toolbar': hasFixedToolbar,\n\t\t[ 'is-mode-' + editorMode ]: true,\n\t} );\n\n\treturn (\n\t\t<div className={ classes }>\n\t\t\t<ErrorBoundary onError={ onError }>\n\t\t\t\t<HotSwapper />\n\n\t\t\t\t{ resizeListener }\n\n\t\t\t\t<ClickOutsideWrapper\n\t\t\t\t\tonOutside={ () => setEditing( false ) }\n\t\t\t\t\tonFocus={ () => ! isEditing && setEditing( true ) }\n\t\t\t\t>\n\t\t\t\t\t<BlockEditorContents\n\t\t\t\t\t\tsettings={ settings }\n\t\t\t\t\t\trenderMoreMenu={ renderMoreMenu }\n\t\t\t\t\t\tonLoad={ onLoad }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</BlockEditorContents>\n\t\t\t\t</ClickOutsideWrapper>\n\t\t\t</ErrorBoundary>\n\t\t</div>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { isEditorReady, getEditorMode, isEditing, isFeatureActive } = select( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tisEditorReady: isEditorReady(),\n\t\t\teditorMode: getEditorMode(),\n\t\t\tisEditing: isEditing(),\n\t\t\thasFixedToolbar: isFeatureActive( 'fixedToolbar' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { setEditing } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tsetEditing,\n\t\t};\n\t} ),\n] )( BlockEditorContainer );\n"],"file":"index.js"}