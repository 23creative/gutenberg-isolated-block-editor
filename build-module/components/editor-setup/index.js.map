{"version":3,"sources":["../../../src/components/editor-setup/index.js"],"names":["__","useEffect","withDispatch","withSelect","useMemo","compose","getEditorSettings","EditorSetup","props","currentSettings","updateSettings","setupEditor","isEditing","topToolbar","editor","reusableBlocks","select","registry","settings","isFeatureActive","getBlockTypes","blockTypes","hasFixedToolbar","getEntityRecords","iso","__experimentalReusableBlocks","__experimentalFetchReusableBlocks","dispatch","updateEditorSettings"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\n\nimport getEditorSettings from './editor-settings';\n\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n\n/**\n * Settings callback\n * @callback OnSettings\n * @param {BlockEditorSettings} settings\n */\n\n/**\n * Sets up Gutenberg and the Isolated Block Editor\n *\n * An initial setup is performed, and is then reset each time the editor is focussed. This ensures we are applying the right\n * settings for this particular editor.\n *\n * @param {object} props - Component props\n * @param {BlockEditorSettings} props.currentSettings - Modified settings\n * @param {OnSettings} props.updateSettings - Update settings\n * @param {OnSettings} props.setupEditor - Set up the Gutenberg editor\n * @param {boolean} props.isEditing - Are we editing in this editor?\n * @param {boolean} props.topToolbar - Is the top toolbar enabled?\n */\nfunction EditorSetup( props ) {\n\tconst { currentSettings, updateSettings, setupEditor, isEditing, topToolbar } = props;\n\n\t// This is the initial setup\n\tuseEffect( () => {\n\t\t// Setup the Isolated Editor & Gutenberg\n\t\tsetupEditor( currentSettings );\n\t\tupdateSettings( currentSettings );\n\t}, [] );\n\n\t// Run whenever the editor is focussed, or the topToolbar setting or reusable blocks change\n\tuseEffect( () => {\n\t\tif ( ! isEditing ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Setup Gutenberg for this editor, but only when focussed. This swaps allowed blocks and other capabilities\n\t\tupdateSettings( currentSettings );\n\t}, [ isEditing, topToolbar, currentSettings.editor.reusableBlocks ] );\n\n\treturn null;\n}\n\nexport default compose( [\n\twithSelect( ( select, { settings }, registry ) => {\n\t\tconst { isEditing, isFeatureActive } = select( 'isolated/editor' );\n\t\tconst { getBlockTypes } = select( 'core/blocks' );\n\t\tconst blockTypes = getBlockTypes();\n\t\tconst hasFixedToolbar = isFeatureActive( 'fixedToolbar' );\n\t\tconst reusableBlocks = select( 'core' ).getEntityRecords( 'postType', 'wp_block' );\n\n\t\treturn {\n\t\t\tisEditing: isEditing(),\n\t\t\ttopToolbar: hasFixedToolbar,\n\t\t\tcurrentSettings: useMemo(\n\t\t\t\t() => ( {\n\t\t\t\t\t...settings,\n\n\t\t\t\t\teditor: {\n\t\t\t\t\t\t...getEditorSettings(\n\t\t\t\t\t\t\tsettings.editor,\n\t\t\t\t\t\t\tsettings.iso,\n\t\t\t\t\t\t\tblockTypes,\n\t\t\t\t\t\t\thasFixedToolbar || settings.editor?.hasFixedToolbar || false\n\t\t\t\t\t\t),\n\n\t\t\t\t\t\t// Reusable blocks\n\t\t\t\t\t\t__experimentalReusableBlocks: [],\n\t\t\t\t\t\t__experimentalFetchReusableBlocks: false,\n\t\t\t\t\t\t// ...( settings.editor?.__experimentalReusableBlocks === false\n\t\t\t\t\t\t// \t? {\n\t\t\t\t\t\t// \t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t\t\t\t// \t\t\t__experimentalFetchReusableBlocks: false,\n\t\t\t\t\t\t// \t  }\n\t\t\t\t\t\t// \t: {\n\t\t\t\t\t\t// \t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t\t\t\t// \t\t\t__experimentalFetchReusableBlocks: registry.dispatch( 'core/editor' )\n\t\t\t\t\t\t// \t\t\t\t.__experimentalFetchReusableBlocks,\n\t\t\t\t\t\t// \t  } ),\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t\t\t[ settings, blockTypes, hasFixedToolbar, reusableBlocks ]\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateEditorSettings } = dispatch( 'core/editor' );\n\t\tconst { updateSettings } = dispatch( 'core/block-editor' );\n\t\tconst { setupEditor } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tsetupEditor,\n\t\t\tupdateSettings: ( { editor } ) => {\n\t\t\t\tupdateSettings( editor );\n\t\t\t\tupdateEditorSettings( editor );\n\t\t\t},\n\t\t};\n\t} ),\n] )( EditorSetup );\n"],"file":"index.js"}