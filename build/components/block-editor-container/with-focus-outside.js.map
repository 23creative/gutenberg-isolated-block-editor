{"version":3,"sources":["../../../src/components/block-editor-container/with-focus-outside.js"],"names":["INPUT_BUTTON_TYPES","isFocusNormalizedButton","element","nodeName","type","WrappedComponent","arguments","bindNode","bind","cancelBlurCheck","queueBlurCheck","normalizeButtonFocus","clearTimeout","blurCheckTimeout","node","event","persist","preventBlurCheck","setTimeout","document","hasFocus","preventDefault","handleFocusOutside","handleFocus","target","isInteractionEnd","props","Component"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Input types which are classified as button types, for use in considering\n * whether element is a (focus-normalized) button.\n *\n * @type {string[]}\n */\nconst INPUT_BUTTON_TYPES = [ 'button', 'submit' ];\n\n/**\n * Returns true if the given element is a button element subject to focus\n * normalization, or false otherwise.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n *\n * @param {Element} element Element to test.\n *\n * @return {boolean} Whether element is a button.\n */\nfunction isFocusNormalizedButton( element ) {\n\tswitch ( element.nodeName ) {\n\t\tcase 'A':\n\t\tcase 'BUTTON':\n\t\t\treturn true;\n\n\t\tcase 'INPUT':\n\t\t\treturn includes( INPUT_BUTTON_TYPES, element.type );\n\t}\n\n\treturn false;\n}\n\nexport default createHigherOrderComponent( ( WrappedComponent ) => {\n\treturn class extends Component {\n\t\tconstructor() {\n\t\t\tsuper( ...arguments );\n\n\t\t\tthis.bindNode = this.bindNode.bind( this );\n\t\t\tthis.cancelBlurCheck = this.cancelBlurCheck.bind( this );\n\t\t\tthis.queueBlurCheck = this.queueBlurCheck.bind( this );\n\t\t\tthis.normalizeButtonFocus = this.normalizeButtonFocus.bind( this );\n\t\t}\n\n\t\tcomponentWillUnmount() {\n\t\t\tclearTimeout( this.blurCheckTimeout );\n\t\t}\n\n\t\tbindNode( node ) {\n\t\t\tif ( node ) {\n\t\t\t\tthis.node = node;\n\t\t\t} else {\n\t\t\t\tdelete this.node;\n\t\t\t\tthis.cancelBlurCheck();\n\t\t\t}\n\t\t}\n\n\t\tqueueBlurCheck( event ) {\n\t\t\t// React does not allow using an event reference asynchronously\n\t\t\t// due to recycling behavior, except when explicitly persisted.\n\t\t\tevent.persist();\n\n\t\t\t// Skip blur check if clicking button. See `normalizeButtonFocus`.\n\t\t\tif ( this.preventBlurCheck ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.blurCheckTimeout = setTimeout( () => {\n\t\t\t\t// If document is not focused then focus should remain\n\t\t\t\t// inside the wrapped component and therefore we cancel\n\t\t\t\t// this blur event thereby leaving focus in place.\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Document/hasFocus.\n\t\t\t\tif ( ! document.hasFocus() ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( 'function' === typeof this.node.handleFocusOutside ) {\n\t\t\t\t\tthis.node.handleFocusOutside( event );\n\t\t\t\t}\n\t\t\t}, 0 );\n\t\t}\n\n\t\tcancelBlurCheck() {\n\t\t\tclearTimeout( this.blurCheckTimeout );\n\t\t\tif ( typeof this.node !== 'undefined' && 'function' === typeof this.node.handleFocus ) {\n\t\t\t\tthis.node.handleFocus( event );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles a mousedown or mouseup event to respectively assign and\n\t\t * unassign a flag for preventing blur check on button elements. Some\n\t\t * browsers, namely Firefox and Safari, do not emit a focus event on\n\t\t * button elements when clicked, while others do. The logic here\n\t\t * intends to normalize this as treating click on buttons as focus.\n\t\t *\n\t\t * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n\t\t *\n\t\t * @param {MouseEvent} event Event for mousedown or mouseup.\n\t\t */\n\t\tnormalizeButtonFocus( event ) {\n\t\t\tconst { type, target } = event;\n\n\t\t\tconst isInteractionEnd = includes(\n\t\t\t\t[ 'mouseup', 'touchend' ],\n\t\t\t\ttype\n\t\t\t);\n\n\t\t\tif ( isInteractionEnd ) {\n\t\t\t\tthis.preventBlurCheck = false;\n\t\t\t} else if ( isFocusNormalizedButton( target ) ) {\n\t\t\t\tthis.preventBlurCheck = true;\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\t// Disable reason: See `normalizeButtonFocus` for browser-specific\n\t\t\t// focus event normalization.\n\n\t\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tonFocus={ this.cancelBlurCheck }\n\t\t\t\t\tonMouseDown={ this.normalizeButtonFocus }\n\t\t\t\t\tonMouseUp={ this.normalizeButtonFocus }\n\t\t\t\t\tonTouchStart={ this.normalizeButtonFocus }\n\t\t\t\t\tonTouchEnd={ this.normalizeButtonFocus }\n\t\t\t\t\tonBlur={ this.queueBlurCheck }\n\t\t\t\t>\n\t\t\t\t\t<WrappedComponent ref={ this.bindNode } { ...this.props } />\n\t\t\t\t</div>\n\t\t\t);\n\t\t\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n\t\t}\n\t};\n}, 'withFocusOutside' );\n"],"file":"with-focus-outside.js"}