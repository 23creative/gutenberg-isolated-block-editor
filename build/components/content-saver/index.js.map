{"version":3,"sources":["../../../src/components/content-saver/index.js"],"names":["ContentSaver","props","onSaveBlocks","onSaveContent","firstTime","setReady","select","blocks","getBlocks","ignoredContent","getIgnoredContent","saveBlocks","current","length"],"mappings":";;;;;;;AAIA;;AACA;;AACA;;AANA;AACA;AACA;;AAMA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,CAAuBC,KAAvB,EAA+B;AAC9B,MAAQC,YAAR,GAAwCD,KAAxC,CAAQC,YAAR;AAAA,MAAsBC,aAAtB,GAAwCF,KAAxC,CAAsBE,aAAtB;AACA,MAAMC,SAAS,GAAG,qBAAQ,IAAR,CAAlB;;AACA,qBAAqB,uBAAa,iBAAb,CAArB;AAAA,MAAQC,QAAR,gBAAQA,QAAR;;AACA,mBAAmC,qBAClC,UAAEC,MAAF;AAAA,WAAgB;AACfC,MAAAA,MAAM,EAAED,MAAM,CAAE,iBAAF,CAAN,CAA4BE,SAA5B,EADO;AAEfC,MAAAA,cAAc,EAAEH,MAAM,CAAE,iBAAF,CAAN,CAA4BI,iBAA5B;AAFD,KAAhB;AAAA,GADkC,EAKlC,EALkC,CAAnC;AAAA,MAAQH,MAAR,cAAQA,MAAR;AAAA,MAAgBE,cAAhB,cAAgBA,cAAhB;;AAQA,WAASE,UAAT,GAAsB;AACrB;AACAT,IAAAA,YAAY,IAAIA,YAAY,CAAEK,MAAF,EAAUE,cAAV,CAA5B;AACAN,IAAAA,aAAa,IAAIA,aAAa,CAAE,uBAAWI,MAAX,CAAF,CAA9B;AACA;;AAED,0BAAW,YAAM;AAChB,QAAK,CAAEA,MAAP,EAAgB;AACfF,MAAAA,QAAQ,CAAE,IAAF,CAAR;AACA;AACA,KAJe,CAMhB;;;AACA,QAAKD,SAAS,CAACQ,OAAf,EAAyB;AACxBR,MAAAA,SAAS,CAACQ,OAAV,GAAoB,KAApB;AACAP,MAAAA,QAAQ,CAAE,IAAF,CAAR,CAFwB,CAIxB;;AACA,UAAKE,MAAM,IAAIA,MAAM,CAACM,MAAP,GAAgB,CAA/B,EAAmC;AAClCF,QAAAA,UAAU;AACV;AACD,KARD,MAQO;AACNA,MAAAA,UAAU;AACV;AACD,GAlBD,EAkBG,CAAEJ,MAAF,CAlBH;AAoBA,SAAO,IAAP;AACA;;eAEcP,Y","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useEffect, useRef } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { serialize } from '@wordpress/blocks';\n\n/** @typedef {import('../../index').OnSaveBlocks} OnSaveBlocks */\n/** @typedef {import('../../index').OnSaveContent} OnSaveContent */\n\n/**\n * Content saver\n * @param {object} props - Component props\n * @param {OnSaveBlocks} [props.onSaveBlocks] - Save blocks callback\n * @param {OnSaveContent} [props.onSaveContent] - Save content callback\n */\nfunction ContentSaver( props ) {\n\tconst { onSaveBlocks, onSaveContent } = props;\n\tconst firstTime = useRef( true );\n\tconst { setReady } = useDispatch( 'isolated/editor' );\n\tconst { blocks, ignoredContent } = useSelect(\n\t\t( select ) => ( {\n\t\t\tblocks: select( 'isolated/editor' ).getBlocks(),\n\t\t\tignoredContent: select( 'isolated/editor' ).getIgnoredContent(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tfunction saveBlocks() {\n\t\t// Save the content in the format wanted by the user\n\t\tonSaveBlocks && onSaveBlocks( blocks, ignoredContent );\n\t\tonSaveContent && onSaveContent( serialize( blocks ) );\n\t}\n\n\tuseEffect( () => {\n\t\tif ( ! blocks ) {\n\t\t\tsetReady( true );\n\t\t\treturn;\n\t\t}\n\n\t\t// Try and avoid an initial first save if no content\n\t\tif ( firstTime.current ) {\n\t\t\tfirstTime.current = false;\n\t\t\tsetReady( true );\n\n\t\t\t// The editor has initial content - save it\n\t\t\tif ( blocks && blocks.length > 1 ) {\n\t\t\t\tsaveBlocks();\n\t\t\t}\n\t\t} else {\n\t\t\tsaveBlocks();\n\t\t}\n\t}, [ blocks ] );\n\n\treturn null;\n}\n\nexport default ContentSaver;\n"],"file":"index.js"}