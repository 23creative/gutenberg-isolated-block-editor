{"version":3,"sources":["../../../../src/components/collaborative-editing/use-yjs/index.js"],"names":["debug","require","defaultColors","initYDoc","getBlocks","onRemoteDataChange","settings","setPeerSelection","setAvailablePeers","channelId","transport","identity","doc","applyDataChanges","updatePostDoc","getData","postDocToObject","sendMessage","message","type","onReceiveMessage","data","receiveMessage","selection","changes","blocks","connect","user","name","username","color","caretColor","avatarUrl","peers","then","isFirstInChannel","startSharing","title","applyChangesToYjs","getState","sendSelection","start","end","disconnect","window","addEventListener","useYjs","onBlocksChange","noop","onSelectionChange","select","selectionStart","getSelectionStart","selectionEnd","getSelectionEnd","updateBlocksWithUndo","enabled","console","error","onUnmount","current"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { v4 as uuidv4 } from 'uuid';\nimport { noop, sample } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { createDocument } from './yjs-doc';\nimport { postDocToObject, updatePostDoc } from './algorithms/yjs';\n\n/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { addCollabFilters } from './filters';\nimport { registerCollabFormats } from './formats';\n\nconst debug = require( 'debug' )( 'iso-editor:collab' );\n\n/** @typedef {import('..').CollaborationSettings} CollaborationSettings */\n/** @typedef {import('..').CollaborationTransport} CollaborationTransport */\n/** @typedef {import('..').CollaborationTransportDocMessage} CollaborationTransportDocMessage */\n/** @typedef {import('..').CollaborationTransportSelectionMessage} CollaborationTransportSelectionMessage */\n/** @typedef {import('..').EditorSelection} EditorSelection */\n/** @typedef {import('../../block-editor-contents').OnUpdate} OnUpdate */\n\nexport const defaultColors = [ '#4676C0', '#6F6EBE', '#9063B6', '#C3498D', '#9E6D14', '#3B4856', '#4A807A' ];\n\n/**\n * @param {Object} opts - Hook options\n * @param {() => object[]} opts.getBlocks - Content to initialize the Yjs doc with.\n * @param {OnUpdate} opts.onRemoteDataChange - Function to update editor blocks in redux state.\n * @param {CollaborationSettings} opts.settings\n * @param {import('../../../store/peers/actions').setAvailablePeers} opts.setAvailablePeers\n * @param {import('../../../store/peers/actions').setPeerSelection} opts.setPeerSelection\n * @typedef IsoEditorSelection\n * @property {Object} selectionStart\n * @property {Object} selectionEnd\n */\nasync function initYDoc( { getBlocks, onRemoteDataChange, settings, setPeerSelection, setAvailablePeers } ) {\n\tconst { channelId, transport } = settings;\n\n\t/** @type {string} */\n\tconst identity = uuidv4();\n\n\tdebug( `initYDoc (identity: ${ identity })` );\n\n\tconst doc = createDocument( {\n\t\tidentity,\n\t\tapplyDataChanges: updatePostDoc,\n\t\tgetData: postDocToObject,\n\t\t/** @param {Object} message */\n\t\tsendMessage: ( message ) => {\n\t\t\tdebug( 'sendDocMessage', message );\n\t\t\ttransport.sendMessage( { type: 'doc', identity, message } );\n\t\t},\n\t} );\n\n\t/** @param {CollaborationTransportDocMessage|CollaborationTransportSelectionMessage} data */\n\tconst onReceiveMessage = ( data ) => {\n\t\tdebug( 'remote change received by transport', data );\n\n\t\tswitch ( data.type ) {\n\t\t\tcase 'doc': {\n\t\t\t\tdoc.receiveMessage( data.message );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'selection': {\n\t\t\t\tsetPeerSelection( data.identity, data.selection );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tdoc.onRemoteDataChange( ( changes ) => {\n\t\tdebug( 'remote change received by ydoc', changes );\n\t\tonRemoteDataChange( changes.blocks );\n\t} );\n\n\treturn transport\n\t\t.connect( {\n\t\t\tuser: {\n\t\t\t\tidentity,\n\t\t\t\tname: settings.username,\n\t\t\t\tcolor: settings.caretColor || sample( defaultColors ),\n\t\t\t\tavatarUrl: settings.avatarUrl,\n\t\t\t},\n\t\t\tonReceiveMessage,\n\t\t\tsetAvailablePeers: ( peers ) => {\n\t\t\t\tdebug( 'setAvailablePeers', peers );\n\t\t\t\tsetAvailablePeers( peers );\n\t\t\t},\n\t\t\tchannelId,\n\t\t} )\n\t\t.then( ( { isFirstInChannel } ) => {\n\t\t\tdebug( `connected (channelId: ${ channelId })` );\n\n\t\t\tif ( isFirstInChannel ) {\n\t\t\t\tdebug( 'first in channel' );\n\n\t\t\t\t// Fetching the blocks from redux now, after the transport has successfully connected,\n\t\t\t\t// ensures that we don't initialize the Yjs doc with stale blocks.\n\t\t\t\t// (This can happen if <IsolatedBlockEditor> is given an onLoad handler.)\n\t\t\t\tdoc.startSharing( { title: '', blocks: getBlocks() } );\n\t\t\t} else {\n\t\t\t\tdoc.connect();\n\t\t\t}\n\n\t\t\tconst applyChangesToYjs = ( blocks ) => {\n\t\t\t\tif ( doc.getState() !== 'on' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdebug( 'local changes applied to ydoc' );\n\t\t\t\tdoc.applyDataChanges( { blocks } );\n\t\t\t};\n\n\t\t\tconst sendSelection = ( start, end ) => {\n\t\t\t\tdebug( 'sendSelection', start, end );\n\t\t\t\ttransport.sendMessage( {\n\t\t\t\t\ttype: 'selection',\n\t\t\t\t\tidentity,\n\t\t\t\t\tselection: {\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t};\n\n\t\t\tconst disconnect = () => {\n\t\t\t\ttransport.disconnect();\n\t\t\t\tdoc.disconnect();\n\t\t\t};\n\n\t\t\twindow.addEventListener( 'beforeunload', () => disconnect() );\n\n\t\t\treturn { applyChangesToYjs, sendSelection, disconnect };\n\t\t} );\n}\n\n/**\n * @param {Object} opts - Hook options\n * @param {CollaborationSettings} [opts.settings]\n */\nexport default function useYjs( { settings } ) {\n\tconst onBlocksChange = useRef( noop );\n\tconst onSelectionChange = useRef( noop );\n\n\tconst { blocks, getBlocks, selectionStart, selectionEnd } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tblocks: select( 'isolated/editor' ).getBlocks(),\n\t\t\tgetBlocks: select( 'isolated/editor' ).getBlocks,\n\t\t\tselectionStart: select( 'core/block-editor' ).getSelectionStart(),\n\t\t\tselectionEnd: select( 'core/block-editor' ).getSelectionEnd(),\n\t\t};\n\t}, [] );\n\n\tconst { setAvailablePeers, setPeerSelection, updateBlocksWithUndo } = useDispatch( 'isolated/editor' );\n\n\tuseEffect( () => {\n\t\tif ( ! settings?.enabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! settings.transport ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( `Collaborative editor is disabled because a transport module wasn't provided.` );\n\t\t\treturn;\n\t\t}\n\n\t\tdebug( 'registered collab formats' );\n\t\tregisterCollabFormats();\n\n\t\tdebug( 'added collab filters' );\n\t\taddCollabFilters();\n\n\t\tlet onUnmount = noop;\n\n\t\tinitYDoc( {\n\t\t\tonRemoteDataChange: updateBlocksWithUndo,\n\t\t\tsettings,\n\t\t\tgetBlocks,\n\t\t\tsetPeerSelection,\n\t\t\tsetAvailablePeers,\n\t\t} ).then( ( { applyChangesToYjs, sendSelection, disconnect } ) => {\n\t\t\tonUnmount = () => {\n\t\t\t\tdebug( 'unmount' );\n\t\t\t\tdisconnect();\n\t\t\t};\n\n\t\t\tonBlocksChange.current = applyChangesToYjs;\n\t\t\tonSelectionChange.current = sendSelection;\n\t\t} );\n\n\t\treturn () => onUnmount();\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tonBlocksChange.current( blocks );\n\t}, [ blocks ] );\n\n\tuseEffect( () => {\n\t\tonSelectionChange.current( selectionStart, selectionEnd );\n\t}, [ selectionStart, selectionEnd ] );\n}\n"],"file":"index.js"}