{"version":3,"sources":["../../../../src/components/block-editor-toolbar/more-menu/editor-menu.js"],"names":["EditorMenu","onClose","editorMode","onSetMode","isCodeEditingEnabled","settings","setMode","mode","iso","moreMenu","editor","check","select","getEditorMode","getEditorSettings","codeEditingEnabled","dispatch","setEditorMode"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;;;AAPA;AACA;AACA;;AAOA;;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,OAA0F;AAAA;;AAAA,MAAnEC,OAAmE,QAAnEA,OAAmE;AAAA,MAA1DC,UAA0D,QAA1DA,UAA0D;AAAA,MAA9CC,SAA8C,QAA9CA,SAA8C;AAAA,MAAnCC,oBAAmC,QAAnCA,oBAAmC;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AACzF;AACD;AACA;AACC,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAEC,IAAF,EAAY;AAC3BJ,IAAAA,SAAS,CAAEI,IAAF,CAAT;AACAN,IAAAA,OAAO;AACP,GAHD;;AAKA,MAAK,CAAEG,oBAAP,EAA8B;AAC7B,WAAO,IAAP;AACA;;AAED,MAAK,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,6BAAAA,QAAQ,CAAEG,GAAV,gEAAeC,QAAf,MAA4B,KAA5B,IAAqC,EAAEJ,QAAF,aAAEA,QAAF,iCAAEA,QAAQ,CAAEG,GAAZ,oEAAE,eAAeC,QAAjB,kDAAE,sBAAyBC,MAA3B,CAA1C,EAA8E;AAC7E,WAAO,IAAP;AACA;;AAED,SACC,cAAC,qBAAD;AAAW,IAAA,KAAK,EAAG,cAAI,QAAJ,EAAc,MAAd;AAAnB,KACC,cAAC,oBAAD;AACC,IAAA,IAAI,EAAGR,UAAU,KAAK,QAAf,IAA2BS,YADnC;AAEC,IAAA,UAAU,EAAGT,UAAU,KAAK,QAF7B;AAGC,IAAA,OAAO,EAAG;AAAA,aAAMI,OAAO,CAAE,QAAF,CAAb;AAAA,KAHX;AAIC,IAAA,IAAI,EAAC;AAJN,KAMG,cAAI,eAAJ,CANH,CADD,EAUC,cAAC,oBAAD;AACC,IAAA,IAAI,EAAGJ,UAAU,KAAK,MAAf,IAAyBS,YADjC;AAEC,IAAA,UAAU,EAAGT,UAAU,KAAK,MAF7B;AAGC,IAAA,OAAO,EAAG;AAAA,aAAMI,OAAO,CAAE,MAAF,CAAb;AAAA,KAHX;AAIC,IAAA,IAAI,EAAC;AAJN,KAMG,cAAI,aAAJ,CANH,CAVD,CADD;AAqBA;;eAEc,sBAAS,CACvB,sBAAY,UAAEM,MAAF,EAAc;AACzB,gBAA0BA,MAAM,CAAE,iBAAF,CAAhC;AAAA,MAAQC,aAAR,WAAQA,aAAR;;AACA,8BAA+BD,MAAM,CAAE,aAAF,CAAN,CAAwBE,iBAAxB,EAA/B;AAAA,MAAQC,kBAAR,yBAAQA,kBAAR;;AAEA,SAAO;AACNb,IAAAA,UAAU,EAAEW,aAAa,EADnB;AAENT,IAAAA,oBAAoB,EAAEW;AAFhB,GAAP;AAIA,CARD,CADuB,EAUvB,wBAAc,UAAEC,QAAF;AAAA,SAAkB;AAC/Bb,IAAAA,SAD+B,qBACpBI,IADoB,EACb;AACjBS,MAAAA,QAAQ,CAAE,iBAAF,CAAR,CAA8BC,aAA9B,CAA6CV,IAA7C;AACA;AAH8B,GAAlB;AAAA,CAAd,CAVuB,CAAT,EAeVP,UAfU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { MenuGroup, MenuItem } from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { check } from '@wordpress/icons';\n\n/** @typedef {import('./index').OnClose} OnClose */\n/** @typedef {import('../../../index').BlockEditorSettings} BlockEditorSettings */\n\n/**\n * Close dropdown callback\n * @callback OnSetMode\n * @param {string} mode\n */\n\n/**\n * The 'more menu' editor section\n *\n * @param {object} props - Component props\n * @param {boolean} props.isCodeEditingEnabled\n * @param {string} props.editorMode\n * @param {OnClose} props.onClose - Callback to close the menu\n * @param {OnSetMode} props.onSetMode\n * @param {BlockEditorSettings} props.settings - Settings\n */\nfunction EditorMenu( { onClose, editorMode, onSetMode, isCodeEditingEnabled, settings } ) {\n\t/**\n\t * @param {string} mode\n\t */\n\tconst setMode = ( mode ) => {\n\t\tonSetMode( mode );\n\t\tonClose();\n\t};\n\n\tif ( ! isCodeEditingEnabled ) {\n\t\treturn null;\n\t}\n\n\tif ( settings?.iso?.moreMenu === false || ! settings?.iso?.moreMenu?.editor ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<MenuGroup label={ _x( 'Editor', 'noun' ) }>\n\t\t\t<MenuItem\n\t\t\t\ticon={ editorMode === 'visual' && check }\n\t\t\t\tisSelected={ editorMode === 'visual' }\n\t\t\t\tonClick={ () => setMode( 'visual' ) }\n\t\t\t\trole=\"menuitemcheckbox\"\n\t\t\t>\n\t\t\t\t{ __( 'Visual editor' ) }\n\t\t\t</MenuItem>\n\n\t\t\t<MenuItem\n\t\t\t\ticon={ editorMode === 'text' && check }\n\t\t\t\tisSelected={ editorMode === 'text' }\n\t\t\t\tonClick={ () => setMode( 'text' ) }\n\t\t\t\trole=\"menuitemcheckbox\"\n\t\t\t>\n\t\t\t\t{ __( 'Code editor' ) }\n\t\t\t</MenuItem>\n\t\t</MenuGroup>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getEditorMode } = select( 'isolated/editor' );\n\t\tconst { codeEditingEnabled } = select( 'core/editor' ).getEditorSettings();\n\n\t\treturn {\n\t\t\teditorMode: getEditorMode(),\n\t\t\tisCodeEditingEnabled: codeEditingEnabled,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonSetMode( mode ) {\n\t\t\tdispatch( 'isolated/editor' ).setEditorMode( mode );\n\t\t},\n\t} ) ),\n] )( EditorMenu );\n"],"file":"editor-menu.js"}