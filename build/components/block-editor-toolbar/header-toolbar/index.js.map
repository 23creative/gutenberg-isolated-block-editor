{"version":3,"sources":["../../../../src/components/block-editor-toolbar/header-toolbar/index.js"],"names":["preventDefault","event","HeaderToolbar","props","inserterButton","setIsInserterOpened","isMobileViewport","select","hasInserterItems","getBlockRootClientId","getBlockSelectionEnd","hasFixedToolbar","isFeatureActive","hasPeers","isInserterEnabled","getEditorMode","getEditorSettings","richEditingEnabled","isTextModeEnabled","previewDeviceType","isInserterOpened","showIconLabels","isLargeViewport","isWideViewport","settings","iso","toolbar","inserter","toc","navigation","undoSetting","undo","selectorTool","displayBlockToolbar","toolbarAriaLabel","openInserter","current","focus","Button","plus","EditorHistoryUndo","undefined","EditorHistoryRedo","BlockNavigationDropdown","TableOfContents"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport { ToolbarItem, Button, Popover } from '@wordpress/components';\nimport { NavigableToolbar, BlockNavigationDropdown, __experimentalLibrary as Library, ToolSelector } from '@wordpress/block-editor';\nimport { TableOfContents } from '@wordpress/editor';\nimport { plus } from '@wordpress/icons';\nimport { useRef, useCallback } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport EditorHistoryRedo from './redo';\nimport EditorHistoryUndo from './undo';\n\nconst preventDefault = ( event ) => {\n\tevent.preventDefault();\n};\n\nfunction HeaderToolbar( props ) {\n\tconst inserterButton = useRef();\n\tconst { setIsInserterOpened } = useDispatch( 'isolated/editor' );\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst {\n\t\thasFixedToolbar,\n\t\thasPeers,\n\t\tisInserterEnabled,\n\t\tisTextModeEnabled,\n\t\tshowIconLabels,\n\t\tpreviewDeviceType,\n\t\tisInserterOpened,\n\t} = useSelect( ( select ) => {\n\t\tconst { hasInserterItems, getBlockRootClientId, getBlockSelectionEnd } = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\thasFixedToolbar: select( 'isolated/editor' ).isFeatureActive( 'fixedToolbar' ),\n\t\t\thasPeers: select( 'isolated/editor' ).hasPeers(),\n\t\t\t// This setting (richEditingEnabled) should not live in the block editor's setting.\n\t\t\tisInserterEnabled:\n\t\t\t\tselect( 'isolated/editor' ).getEditorMode() === 'visual' &&\n\t\t\t\tselect( 'core/editor' ).getEditorSettings().richEditingEnabled &&\n\t\t\t\thasInserterItems( getBlockRootClientId( getBlockSelectionEnd() ) ),\n\t\t\tisTextModeEnabled: select( 'isolated/editor' ).getEditorMode() === 'text',\n\t\t\tpreviewDeviceType: 'Desktop',\n\t\t\tisInserterOpened: select( 'isolated/editor' ).isInserterOpened(),\n\t\t\tshowIconLabels: false, // Not implemented yet\n\t\t};\n\t}, [] );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst isWideViewport = useViewportMatch( 'wide' );\n\tconst { inserter, toc, navigation, undo: undoSetting, selectorTool } = props.settings.iso.toolbar;\n\tconst undo = undoSetting && ! hasPeers;\n\tconst displayBlockToolbar = ! isLargeViewport || previewDeviceType !== 'Desktop' || hasFixedToolbar;\n\tconst toolbarAriaLabel = displayBlockToolbar\n\t\t? /* translators: accessibility text for the editor toolbar when Top Toolbar is on */\n\t\t  __( 'Document and block tools' )\n\t\t: /* translators: accessibility text for the editor toolbar when Top Toolbar is off */\n\t\t  __( 'Document tools' );\n\tconst openInserter = useCallback( () => {\n\t\tif ( isInserterOpened ) {\n\t\t\t// Focusing the inserter button closes the inserter popover\n\t\t\t// @ts-ignore\n\t\t\tinserterButton.current.focus();\n\t\t} else {\n\t\t\tsetIsInserterOpened( true );\n\t\t}\n\t}, [ isInserterOpened, setIsInserterOpened ] );\n\n\treturn (\n\t\t<NavigableToolbar className=\"edit-post-header-toolbar\" aria-label={ toolbarAriaLabel }>\n\t\t\t{ ( inserter || undo || navigation || toc || selectorTool ) && (\n\t\t\t\t<div className=\"edit-post-header-toolbar__left\">\n\t\t\t\t\t{ inserter && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tref={ inserterButton }\n\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\tclassName=\"edit-post-header-toolbar__inserter-toggle\"\n\t\t\t\t\t\t\tisPressed={ isInserterOpened }\n\t\t\t\t\t\t\tonMouseDown={ preventDefault }\n\t\t\t\t\t\t\tonClick={ openInserter }\n\t\t\t\t\t\t\tdisabled={ ! isInserterEnabled }\n\t\t\t\t\t\t\tisPrimary\n\t\t\t\t\t\t\ticon={ plus }\n\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16\n\t\t\t\t\tcharacters. */\n\t\t\t\t\t\t\tlabel={ _x( 'Toggle block inserter', 'Generic label for block inserter button' ) }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isInserterOpened && (\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tposition=\"bottom right\"\n\t\t\t\t\t\t\tonClose={ () => setIsInserterOpened( false ) }\n\t\t\t\t\t\t\tanchorRef={ inserterButton.current }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Library\n\t\t\t\t\t\t\t\tshowMostUsedBlocks={ false }\n\t\t\t\t\t\t\t\tshowInserterHelpPanel\n\t\t\t\t\t\t\t\tonSelect={ () => {\n\t\t\t\t\t\t\t\t\tif ( isMobileViewport ) {\n\t\t\t\t\t\t\t\t\t\tsetIsInserterOpened( false );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ selectorTool && <ToolSelector /> }\n\t\t\t\t\t{ undo && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryUndo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ undo && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryRedo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ navigation && <ToolbarItem as={ BlockNavigationDropdown } isDisabled={ isTextModeEnabled } /> }\n\t\t\t\t\t{ toc && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ TableOfContents }\n\t\t\t\t\t\t\thasOutlineItemsDisabled={ isTextModeEnabled }\n\t\t\t\t\t\t\trepositionDropdown={ showIconLabels && ! isWideViewport }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</NavigableToolbar>\n\t);\n}\n\nexport default HeaderToolbar;\n"],"file":"index.js"}