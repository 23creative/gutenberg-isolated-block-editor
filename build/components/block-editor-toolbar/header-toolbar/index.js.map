{"version":3,"sources":["../../../../src/components/block-editor-toolbar/header-toolbar/index.js"],"names":["HeaderToolbar","props","inserterButton","setIsInserterOpened","isMobileViewport","select","hasInserterItems","getBlockRootClientId","getBlockSelectionEnd","hasFixedToolbar","isFeatureActive","hasPeers","isInserterEnabled","getEditorMode","getEditorSettings","richEditingEnabled","isTextModeEnabled","previewDeviceType","isInserterOpened","isLargeViewport","settings","iso","toolbar","inserter","toc","navigation","undoSetting","undo","displayBlockToolbar","toolbarAriaLabel","Button","event","preventDefault","current","focus","plus","EditorHistoryUndo","EditorHistoryRedo","BlockNavigationDropdown","TableOfContents"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport { ToolbarItem, Button, Popover } from '@wordpress/components';\nimport {\n\tBlockToolbar,\n\tNavigableToolbar,\n\tBlockNavigationDropdown,\n\t__experimentalLibrary as Library,\n} from '@wordpress/block-editor';\nimport { TableOfContents } from '@wordpress/editor';\nimport { plus } from '@wordpress/icons';\nimport { useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport EditorHistoryRedo from './redo';\nimport EditorHistoryUndo from './undo';\nimport './style.scss';\n\nfunction HeaderToolbar( props ) {\n\tconst inserterButton = useRef();\n\tconst { setIsInserterOpened } = useDispatch( 'isolated/editor' );\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst {\n\t\thasFixedToolbar,\n\t\thasPeers,\n\t\tisInserterEnabled,\n\t\tisTextModeEnabled,\n\t\tpreviewDeviceType,\n\t\tisInserterOpened,\n\t} = useSelect( ( select ) => {\n\t\tconst { hasInserterItems, getBlockRootClientId, getBlockSelectionEnd } = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\thasFixedToolbar: select( 'isolated/editor' ).isFeatureActive( 'fixedToolbar' ),\n\t\t\thasPeers: select( 'isolated/editor' ).hasPeers(),\n\t\t\t// This setting (richEditingEnabled) should not live in the block editor's setting.\n\t\t\tisInserterEnabled:\n\t\t\t\tselect( 'isolated/editor' ).getEditorMode() === 'visual' &&\n\t\t\t\tselect( 'core/editor' ).getEditorSettings().richEditingEnabled &&\n\t\t\t\thasInserterItems( getBlockRootClientId( getBlockSelectionEnd() ) ),\n\t\t\tisTextModeEnabled: select( 'isolated/editor' ).getEditorMode() === 'text',\n\t\t\tpreviewDeviceType: 'Desktop',\n\t\t\tisInserterOpened: select( 'isolated/editor' ).isInserterOpened(),\n\t\t};\n\t}, [] );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst { inserter, toc, navigation, undo: undoSetting } = props.settings.iso.toolbar;\n\tconst undo = undoSetting && ! hasPeers;\n\tconst displayBlockToolbar = ! isLargeViewport || previewDeviceType !== 'Desktop' || hasFixedToolbar;\n\tconst toolbarAriaLabel = displayBlockToolbar\n\t\t? /* translators: accessibility text for the editor toolbar when Top Toolbar is on */\n\t\t  __( 'Document and block tools' )\n\t\t: /* translators: accessibility text for the editor toolbar when Top Toolbar is off */\n\t\t  __( 'Document tools' );\n\n\treturn (\n\t\t<NavigableToolbar className=\"edit-post-header-toolbar\" aria-label={ toolbarAriaLabel }>\n\t\t\t{ ( inserter || undo || navigation || toc ) && (\n\t\t\t\t<div className=\"edit-post-header-toolbar__left\">\n\t\t\t\t\t{ inserter && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tref={ inserterButton }\n\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\tclassName=\"edit-post-header-toolbar__inserter-toggle\"\n\t\t\t\t\t\t\tisPrimary\n\t\t\t\t\t\t\tisPressed={ isInserterOpened }\n\t\t\t\t\t\t\tonMouseDown={ ( event ) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tif ( isInserterOpened ) {\n\t\t\t\t\t\t\t\t\t// Focusing the inserter button closes the inserter popover\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tinserterButton.current.focus();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetIsInserterOpened( true );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tdisabled={ ! isInserterEnabled }\n\t\t\t\t\t\t\ticon={ plus }\n\t\t\t\t\t\t\tlabel={ _x( 'Add block', 'Generic label for block inserter button' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isInserterOpened && (\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tposition=\"bottom right\"\n\t\t\t\t\t\t\tonClose={ () => setIsInserterOpened( false ) }\n\t\t\t\t\t\t\tanchorRef={ inserterButton.current }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Library\n\t\t\t\t\t\t\t\tshowMostUsedBlocks={ false }\n\t\t\t\t\t\t\t\tshowInserterHelpPanel\n\t\t\t\t\t\t\t\tonSelect={ () => {\n\t\t\t\t\t\t\t\t\tif ( isMobileViewport ) {\n\t\t\t\t\t\t\t\t\t\tsetIsInserterOpened( false );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ undo && <ToolbarItem as={ EditorHistoryUndo } /> }\n\t\t\t\t\t{ undo && <ToolbarItem as={ EditorHistoryRedo } /> }\n\t\t\t\t\t{ navigation && <ToolbarItem as={ BlockNavigationDropdown } isDisabled={ isTextModeEnabled } /> }\n\t\t\t\t\t{ toc && <ToolbarItem as={ TableOfContents } hasOutlineItemsDisabled={ isTextModeEnabled } /> }\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t{ displayBlockToolbar && ! isTextModeEnabled && (\n\t\t\t\t<div className=\"edit-post-header-toolbar__block-toolbar\">\n\t\t\t\t\t<BlockToolbar hideDragHandle />\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</NavigableToolbar>\n\t);\n}\n\nexport default HeaderToolbar;\n"],"file":"index.js"}