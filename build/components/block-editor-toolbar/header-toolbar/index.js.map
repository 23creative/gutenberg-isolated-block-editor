{"version":3,"sources":["../../../../src/components/block-editor-toolbar/header-toolbar/index.js"],"names":["preventDefault","event","HeaderToolbar","props","inserterButton","setIsInserterOpened","setIsListViewOpened","isMobileViewport","select","hasInserterItems","getBlockRootClientId","getBlockSelectionEnd","isListViewOpened","keyboardShortcutsStore","getShortcutRepresentation","hasFixedToolbar","isFeatureActive","isInserterEnabled","getEditorMode","getEditorSettings","richEditingEnabled","isListViewOpen","isTextModeEnabled","previewDeviceType","isInserterOpened","showIconLabels","listViewShortcut","isLargeViewport","isWideViewport","settings","iso","toolbar","inserter","toc","navigation","undo","selectorTool","inserterInSidebar","sidebar","displayBlockToolbar","toolbarAriaLabel","openInserter","toggleListView","Button","plus","current","EditorHistoryUndo","undefined","EditorHistoryRedo","BlockNavigationDropdown","listView","TableOfContents"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport { ToolbarItem, Button, Popover } from '@wordpress/components';\nimport {\n\tNavigableToolbar,\n\tBlockNavigationDropdown,\n\t__experimentalLibrary as Library,\n\tToolSelector,\n} from '@wordpress/block-editor';\nimport { TableOfContents } from '@wordpress/editor';\nimport { plus, listView } from '@wordpress/icons';\nimport { useRef, useCallback } from '@wordpress/element';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport EditorHistoryRedo from './redo';\nimport EditorHistoryUndo from './undo';\n\nconst preventDefault = ( event ) => {\n\tevent.preventDefault();\n};\n\nfunction HeaderToolbar( props ) {\n\tconst inserterButton = useRef();\n\tconst { setIsInserterOpened, setIsListViewOpened } = useDispatch( 'isolated/editor' );\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst {\n\t\thasFixedToolbar,\n\t\tisInserterEnabled,\n\t\tisTextModeEnabled,\n\t\tshowIconLabels,\n\t\tpreviewDeviceType,\n\t\tisInserterOpened,\n\t\tisListViewOpen,\n\t\tlistViewShortcut,\n\t} = useSelect( ( select ) => {\n\t\tconst { hasInserterItems, getBlockRootClientId, getBlockSelectionEnd } = select( 'core/block-editor' );\n\t\tconst { isListViewOpened } = select( 'isolated/editor' );\n\t\tconst { getShortcutRepresentation } = select( keyboardShortcutsStore );\n\n\t\treturn {\n\t\t\thasFixedToolbar: select( 'isolated/editor' ).isFeatureActive( 'fixedToolbar' ),\n\t\t\t// This setting (richEditingEnabled) should not live in the block editor's setting.\n\t\t\tisInserterEnabled:\n\t\t\t\tselect( 'isolated/editor' ).getEditorMode() === 'visual' &&\n\t\t\t\tselect( 'core/editor' ).getEditorSettings().richEditingEnabled &&\n\t\t\t\thasInserterItems( getBlockRootClientId( getBlockSelectionEnd() ) ),\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t\tisTextModeEnabled: select( 'isolated/editor' ).getEditorMode() === 'text',\n\t\t\tpreviewDeviceType: 'Desktop',\n\t\t\tisInserterOpened: select( 'isolated/editor' ).isInserterOpened(),\n\t\t\tshowIconLabels: false, // Not implemented yet\n\t\t\tlistViewShortcut: getShortcutRepresentation( 'core/edit-post/toggle-list-view' ),\n\t\t};\n\t}, [] );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst isWideViewport = useViewportMatch( 'wide' );\n\tconst { inserter, toc, navigation, undo, selectorTool } = props.settings.iso.toolbar;\n\tconst inserterInSidebar = props.settings?.iso?.sidebar?.inserter || false;\n\tconst displayBlockToolbar = ! isLargeViewport || previewDeviceType !== 'Desktop' || hasFixedToolbar;\n\tconst toolbarAriaLabel = displayBlockToolbar\n\t\t? /* translators: accessibility text for the editor toolbar when Top Toolbar is on */\n\t\t  __( 'Document and block tools' )\n\t\t: /* translators: accessibility text for the editor toolbar when Top Toolbar is off */\n\t\t  __( 'Document tools' );\n\tconst openInserter = useCallback( () => {\n\t\tif ( isInserterOpened ) {\n\t\t\t// Focusing the inserter button closes the inserter popover\n\t\t\t// @ts-ignore\n\t\t\tsetIsInserterOpened( false );\n\t\t} else {\n\t\t\tsetIsInserterOpened( true );\n\t\t}\n\t}, [ isInserterOpened, setIsInserterOpened ] );\n\n\tconst toggleListView = useCallback( () => setIsListViewOpened( ! isListViewOpen ), [\n\t\tsetIsListViewOpened,\n\t\tisListViewOpen,\n\t] );\n\n\treturn (\n\t\t<NavigableToolbar className=\"edit-post-header-toolbar\" aria-label={ toolbarAriaLabel }>\n\t\t\t{ ( inserter || undo || navigation || toc || selectorTool ) && (\n\t\t\t\t<div className=\"edit-post-header-toolbar__left\">\n\t\t\t\t\t{ inserter && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tref={ inserterButton }\n\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\tclassName=\"edit-post-header-toolbar__inserter-toggle\"\n\t\t\t\t\t\t\tisPressed={ isInserterOpened }\n\t\t\t\t\t\t\tonMouseDown={ preventDefault }\n\t\t\t\t\t\t\tonClick={ openInserter }\n\t\t\t\t\t\t\tdisabled={ ! isInserterEnabled }\n\t\t\t\t\t\t\tisPrimary\n\t\t\t\t\t\t\ticon={ plus }\n\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16\n\t\t\t\t\tcharacters. */\n\t\t\t\t\t\t\tlabel={ _x( 'Toggle block inserter', 'Generic label for block inserter button' ) }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isInserterOpened && ! inserterInSidebar && (\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tposition=\"bottom right\"\n\t\t\t\t\t\t\tonClose={ () => setIsInserterOpened( false ) }\n\t\t\t\t\t\t\tanchorRef={ inserterButton.current }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Library\n\t\t\t\t\t\t\t\tshowMostUsedBlocks={ false }\n\t\t\t\t\t\t\t\tshowInserterHelpPanel\n\t\t\t\t\t\t\t\tonSelect={ () => {\n\t\t\t\t\t\t\t\t\tif ( isMobileViewport ) {\n\t\t\t\t\t\t\t\t\t\tsetIsInserterOpened( false );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ selectorTool && <ToolSelector /> }\n\t\t\t\t\t{ undo && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryUndo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ undo && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryRedo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ navigation && ! inserterInSidebar && (\n\t\t\t\t\t\t<ToolbarItem as={ BlockNavigationDropdown } isDisabled={ isTextModeEnabled } />\n\t\t\t\t\t) }\n\t\t\t\t\t{ navigation && inserterInSidebar && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\tclassName=\"edit-post-header-toolbar__list-view-toggle\"\n\t\t\t\t\t\t\ticon={ listView }\n\t\t\t\t\t\t\tdisabled={ isTextModeEnabled }\n\t\t\t\t\t\t\tisPressed={ isListViewOpen }\n\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\t\t\t\t\tlabel={ __( 'List View' ) }\n\t\t\t\t\t\t\tonClick={ toggleListView }\n\t\t\t\t\t\t\tshortcut={ listViewShortcut }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ toc && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ TableOfContents }\n\t\t\t\t\t\t\thasOutlineItemsDisabled={ isTextModeEnabled }\n\t\t\t\t\t\t\trepositionDropdown={ showIconLabels && ! isWideViewport }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</NavigableToolbar>\n\t);\n}\n\nexport default HeaderToolbar;\n"],"file":"index.js"}