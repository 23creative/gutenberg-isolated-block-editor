{"version":3,"sources":["../../../src/components/block-editor-toolbar/index.js"],"names":["BlockEditorToolbar","props","settings","editorMode","renderMoreMenu","shortcut","inspector","iso","toolbar","moreMenu","setInspecting","select","isInspecting","isBlockSelected","getBlockSelectionStart","cog"],"mappings":";;;;;;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;;;AAhBA;AACA;AACA;;AAQA;AACA;AACA;;AAMA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEC,KAAF,EAAa;AAAA,MAC/BC,QAD+B,GACUD,KADV,CAC/BC,QAD+B;AAAA,MACrBC,UADqB,GACUF,KADV,CACrBE,UADqB;AAAA,MACTC,cADS,GACUH,KADV,CACTG,cADS;AAEvC,MAAMC,QAAQ,GAAG,GAAjB;AAFuC,MAG/BC,SAH+B,GAGjBJ,QAAQ,CAACK,GAAT,CAAaC,OAHI,CAG/BF,SAH+B;AAAA,MAI/BG,QAJ+B,GAIlBP,QAAQ,CAACK,GAJS,CAI/BE,QAJ+B;;AAAA,qBAKb,uBAAa,iBAAb,CALa;AAAA,MAK/BC,aAL+B,gBAK/BA,aAL+B;;AAAA,mBAMG,qBACzC,UAAEC,MAAF;AAAA,WAAgB;AACfC,MAAAA,YAAY,EAAED,MAAM,CAAE,iBAAF,CAAN,CAA4BC,YAA5B,EADC;AAEfC,MAAAA,eAAe,EAAE,CAAC,CAAEF,MAAM,CAAE,mBAAF,CAAN,CAA8BG,sBAA9B;AAFL,KAAhB;AAAA,GADyC,EAKzC,EALyC,CANH;AAAA,MAM/BF,YAN+B,cAM/BA,YAN+B;AAAA,MAMjBC,eANiB,cAMjBA,eANiB;;AAcvC,0BAAW,YAAM;AAChB;AACA,QAAKD,YAAY,IAAI,CAAEC,eAAvB,EAAyC;AACxCH,MAAAA,aAAa,CAAE,KAAF,CAAb;AACA;AACD,GALD,EAKG,CAAEG,eAAF,CALH;AAOA,SACC;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAkD,IAAA,IAAI,EAAC,QAAvD;AAAgE,IAAA,QAAQ,EAAG,CAAC;AAA5E,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,yBAAD;AAAe,IAAA,QAAQ,EAAGX;AAA1B,IADD,CADD,EAKC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGI,SAAS,IACV,cAAC,kBAAD;AACC,IAAA,IAAI,EAAGS,UADR;AAEC,IAAA,KAAK,EAAG,cAAI,UAAJ,CAFT;AAGC,IAAA,OAAO,EAAG;AAAA,aAAML,aAAa,CAAE,CAAEE,YAAJ,CAAnB;AAAA,KAHX;AAIC,IAAA,SAAS,EAAGA,YAJb;AAKC,qBAAgBA,YALjB;AAMC,IAAA,QAAQ,EAAGP,QANZ;AAOC,IAAA,QAAQ,EAAGF,UAAU,KAAK;AAP3B,IAFF,EAaGS,YAAY,IAAI,cAAC,qBAAD,OAbnB,EAeGH,QAAQ,IACT,cAAC,oBAAD;AACC,IAAA,QAAQ,EAAGP,QADZ;AAEC,IAAA,OAAO,EAAG;AAAA,aAAMQ,aAAa,CAAE,KAAF,CAAnB;AAAA,KAFX;AAGC,IAAA,cAAc,EAAGN;AAHlB,IAhBF,CALD,CADD,CADD;AAiCA,CAtDD;;eAwDeJ,kB","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useEffect } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { cog } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport MoreMenu from './more-menu';\nimport HeaderToolbar from './header-toolbar';\nimport Inspector from './inspector';\nimport './style.scss';\n\n/** @typedef {import('../../store/editor/reducer').EditorMode} EditorMode */\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../index').OnMore} OnMore */\n\n/**\n * Block editor toolbar\n *\n * @param {object} props - Component props\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {EditorMode} props.editorMode - Visual or code?\n * @param {OnMore} props.renderMoreMenu - Callback to render additional items in the more menu\n */\nconst BlockEditorToolbar = ( props ) => {\n\tconst { settings, editorMode, renderMoreMenu } = props;\n\tconst shortcut = 'x';\n\tconst { inspector } = settings.iso.toolbar;\n\tconst { moreMenu } = settings.iso;\n\tconst { setInspecting } = useDispatch( 'isolated/editor' );\n\tconst { isInspecting, isBlockSelected } = useSelect(\n\t\t( select ) => ( {\n\t\t\tisInspecting: select( 'isolated/editor' ).isInspecting(),\n\t\t\tisBlockSelected: !! select( 'core/block-editor' ).getBlockSelectionStart(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tuseEffect( () => {\n\t\t// Close the block inspector when no block is selected. Gutenberg gets a bit crashy otherwise\n\t\tif ( isInspecting && ! isBlockSelected ) {\n\t\t\tsetInspecting( false );\n\t\t}\n\t}, [ isBlockSelected ] );\n\n\treturn (\n\t\t<div className=\"edit-post-editor-regions__header\" role=\"region\" tabIndex={ -1 }>\n\t\t\t<div className=\"edit-post-header\">\n\t\t\t\t<div className=\"edit-post-header__toolbar\">\n\t\t\t\t\t<HeaderToolbar settings={ settings } />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"edit-post-header__settings\">\n\t\t\t\t\t{ inspector && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon={ cog }\n\t\t\t\t\t\t\tlabel={ __( 'Settings' ) }\n\t\t\t\t\t\t\tonClick={ () => setInspecting( ! isInspecting ) }\n\t\t\t\t\t\t\tisPressed={ isInspecting }\n\t\t\t\t\t\t\taria-expanded={ isInspecting }\n\t\t\t\t\t\t\tshortcut={ shortcut }\n\t\t\t\t\t\t\tdisabled={ editorMode === 'text' }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isInspecting && <Inspector /> }\n\n\t\t\t\t\t{ moreMenu && (\n\t\t\t\t\t\t<MoreMenu\n\t\t\t\t\t\t\tsettings={ settings }\n\t\t\t\t\t\t\tonClick={ () => setInspecting( false ) }\n\t\t\t\t\t\t\trenderMoreMenu={ renderMoreMenu }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BlockEditorToolbar;\n"],"file":"index.js"}