{"version":3,"sources":["../../../src/components/block-editor-toolbar/index.js"],"names":["BlockEditorToolbar","props","settings","editorMode","renderMoreMenu","isHugeViewport","iso","toolbar","inspector","documentInspector","moreMenu","inspectorInSidebar","sidebar","openGeneralSidebar","closeGeneralSidebar","setIsInserterOpened","select","isEditing","isEditorSidebarOpened","isBlockSelected","getBlockSelectionStart","hasBlockSelected","isInserterOpened","toggleSidebar","cog"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useEffect } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { cog } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport MoreMenu from './more-menu';\nimport HeaderToolbar from './header-toolbar';\nimport Inspector from './inspector';\nimport ToolbarSlot from './slot';\nimport './style.scss';\n\n/** @typedef {import('../../store/editor/reducer').EditorMode} EditorMode */\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../index').OnMore} OnMore */\n\n/**\n * Block editor toolbar\n *\n * @param {object} props - Component props\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {EditorMode} props.editorMode - Visual or code?\n * @param {OnMore} props.renderMoreMenu - Callback to render additional items in the more menu\n */\nconst BlockEditorToolbar = ( props ) => {\n\tconst { settings, editorMode, renderMoreMenu } = props;\n\tconst isHugeViewport = useViewportMatch( 'huge', '>=' );\n\tconst { inspector, documentInspector } = settings.iso?.toolbar || {};\n\tconst { moreMenu } = settings.iso || {};\n\tconst inspectorInSidebar = settings?.iso?.sidebar?.inspector || false;\n\tconst { openGeneralSidebar, closeGeneralSidebar } = useDispatch( 'isolated/editor' );\n\tconst { setIsInserterOpened } = useDispatch( 'isolated/editor' );\n\tconst { isEditorSidebarOpened, isBlockSelected, hasBlockSelected, isInserterOpened, isEditing } = useSelect(\n\t\t( select ) => ( {\n\t\t\tisEditing: select( 'isolated/editor' ),\n\t\t\tisEditorSidebarOpened: select( 'isolated/editor' ).isEditorSidebarOpened(),\n\t\t\tisBlockSelected: !! select( 'core/block-editor' ).getBlockSelectionStart(),\n\t\t\thasBlockSelected: !! select( 'core/block-editor' ).getBlockSelectionStart(),\n\t\t\tisInserterOpened: select( 'isolated/editor' ).isInserterOpened(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tfunction toggleSidebar() {\n\t\tif ( isEditorSidebarOpened ) {\n\t\t\tcloseGeneralSidebar();\n\t\t} else {\n\t\t\topenGeneralSidebar( hasBlockSelected ? 'edit-post/block' : 'edit-post/document' );\n\t\t}\n\t}\n\n\t// If in popover mode then ensure the sidebar is closed when the editor is first started. This is because the complimentary area status\n\t// is saved to localStorage, and it might have been left open when in sidebar mode.\n\tuseEffect( () => {\n\t\tif ( ! inspectorInSidebar ) {\n\t\t\tcloseGeneralSidebar();\n\t\t}\n\t}, [] );\n\n\tuseEffect( () => {\n\t\t// Close the block inspector when no block is selected. Gutenberg gets a bit crashy otherwise\n\t\tif ( ! inspectorInSidebar && ! isEditing && ! isBlockSelected && isEditorSidebarOpened ) {\n\t\t\tcloseGeneralSidebar();\n\t\t}\n\t}, [ isEditing ] );\n\n\t// Inserter and Sidebars are mutually exclusive\n\tuseEffect( () => {\n\t\tif ( isEditorSidebarOpened && ! isHugeViewport ) {\n\t\t\tsetIsInserterOpened( false );\n\t\t}\n\t}, [ isEditorSidebarOpened, isHugeViewport ] );\n\tuseEffect( () => {\n\t\tif ( isInserterOpened && ( ! isHugeViewport || ! inspectorInSidebar ) ) {\n\t\t\tcloseGeneralSidebar();\n\t\t}\n\t}, [ isInserterOpened, isHugeViewport ] );\n\n\treturn (\n\t\t<div className=\"edit-post-editor-regions__header\" role=\"region\" tabIndex={ -1 }>\n\t\t\t<div className=\"edit-post-header\">\n\t\t\t\t<div className=\"edit-post-header__toolbar\">\n\t\t\t\t\t<HeaderToolbar settings={ settings } />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"edit-post-header__settings\">\n\t\t\t\t\t<ToolbarSlot.Slot />\n\n\t\t\t\t\t{ inspector && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon={ cog }\n\t\t\t\t\t\t\tlabel={ __( 'Settings' ) }\n\t\t\t\t\t\t\tonClick={ toggleSidebar }\n\t\t\t\t\t\t\tisPressed={ isEditorSidebarOpened }\n\t\t\t\t\t\t\taria-expanded={ isEditorSidebarOpened }\n\t\t\t\t\t\t\tdisabled={ editorMode === 'text' }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isEditorSidebarOpened && ! inspectorInSidebar && (\n\t\t\t\t\t\t<Inspector documentInspector={ documentInspector } blockSelected={ isBlockSelected } />\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ moreMenu && (\n\t\t\t\t\t\t<MoreMenu\n\t\t\t\t\t\t\tsettings={ settings }\n\t\t\t\t\t\t\tonClick={ () => closeGeneralSidebar() }\n\t\t\t\t\t\t\trenderMoreMenu={ renderMoreMenu }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BlockEditorToolbar;\n"],"file":"index.js"}