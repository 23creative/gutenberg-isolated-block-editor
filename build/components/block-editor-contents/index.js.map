{"version":3,"sources":["../../../src/components/block-editor-contents/index.js"],"names":["getInitialContent","settings","content","iso","patterns","currentPattern","editor","template","BlockEditorContents","props","blocks","updateBlocksWithoutUndo","updateBlocksWithUndo","getEditorSelectionStart","getEditorSelectionEnd","isEditing","editorMode","children","renderMoreMenu","onLoad","initialContent","parse","rawHandler","length","select","getBlocks","getEditorMode","dispatch"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { Popover } from '@wordpress/components';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport { parse, rawHandler } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport BlockEditorProvider from '../block-editor-provider';\nimport BlockEditorToolbar from '../block-editor-toolbar';\nimport BlockEditor from '../block-editor';\nimport getInitialEditorContent from './editor-content';\n\n/** @typedef {import('../../store/editor/reducer').EditorMode} EditorMode */\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../index').OnLoad} OnLoad */\n/** @typedef {import('../../index').OnMore} OnMore */\n\n/**\n * Get editor selection\n * @callback OnSelection\n */\n\n/**\n * Update callback\n * @callback OnUpdate\n * @param {object[]} blocks - Editor content to save\n */\n\nfunction getInitialContent( settings, content ) {\n\treturn getInitialEditorContent(\n\t\tsettings.iso.patterns,\n\t\tsettings.iso.currentPattern,\n\t\tsettings.editor.template,\n\t\tcontent\n\t);\n}\n\n/**\n * The editor itself, including toolbar\n *\n * @param {object} props - Component props\n * @param {object[]} props.blocks\n * @param {OnUpdate} props.updateBlocksWithoutUndo - Callback to update blocks\n * @param {OnUpdate} props.updateBlocksWithUndo - Callback to update blocks\n * @param {boolean} props.isEditing - Are we editing in this editor?\n * @param {EditorMode} props.editorMode - Visual or code?\n * @param {object} props.children - Child components\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {OnMore} props.renderMoreMenu - Callback to render additional items in the more menu\n * @param {OnSelection} props.getEditorSelectionStart\n * @param {OnSelection} props.getEditorSelectionEnd\n * @param {OnLoad} props.onLoad - Load initial blocks\n */\nfunction BlockEditorContents( props ) {\n\tconst {\n\t\tblocks,\n\t\tupdateBlocksWithoutUndo,\n\t\tupdateBlocksWithUndo,\n\t\tgetEditorSelectionStart,\n\t\tgetEditorSelectionEnd,\n\t\tisEditing,\n\t\teditorMode,\n\t} = props;\n\tconst { children, settings, renderMoreMenu, onLoad } = props;\n\n\t// Set initial content, if we have any, but only if there is no existing data in the editor (from elsewhere)\n\tuseEffect( () => {\n\t\tconst initialContent = getInitialContent( settings, onLoad ? onLoad( parse, rawHandler ) : [] );\n\n\t\tif ( initialContent.length > 0 && ( ! blocks || blocks.length === 0 ) ) {\n\t\t\tupdateBlocksWithoutUndo( initialContent );\n\t\t}\n\t}, [] );\n\n\treturn (\n\t\t<BlockEditorProvider\n\t\t\tvalue={ blocks || [] }\n\t\t\tonInput={ updateBlocksWithoutUndo }\n\t\t\tonChange={ updateBlocksWithUndo }\n\t\t\tselectionStart={ getEditorSelectionStart() }\n\t\t\tselectionEnd={ getEditorSelectionEnd() }\n\t\t\tuseSubRegistry\n\t\t\tsettings={ settings.editor }\n\t\t>\n\t\t\t<BlockEditorToolbar editorMode={ editorMode } settings={ settings } renderMoreMenu={ renderMoreMenu } />\n\t\t\t<BlockEditor isEditing={ isEditing } editorMode={ editorMode }>\n\t\t\t\t{ children }\n\t\t\t</BlockEditor>\n\n\t\t\t<Popover.Slot />\n\t\t</BlockEditorProvider>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlocks,\n\t\t\tgetEditorSelectionStart,\n\t\t\tgetEditorSelectionEnd,\n\t\t\tgetEditorMode,\n\t\t\tisEditing,\n\t\t} = select( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tblocks: getBlocks(),\n\t\t\tgetEditorSelectionEnd,\n\t\t\tgetEditorSelectionStart,\n\t\t\tisEditing: isEditing(),\n\t\t\teditorMode: getEditorMode(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateBlocksWithUndo, updateBlocksWithoutUndo } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tupdateBlocksWithUndo,\n\t\t\tupdateBlocksWithoutUndo,\n\t\t};\n\t} ),\n] )( BlockEditorContents );\n"],"file":"index.js"}