{"version":3,"sources":["../../../src/components/block-editor-contents/index.js"],"names":["getInitialContent","settings","loader","contentLoader","Promise","resolve","parse","rawHandler","then","content","iso","patterns","currentPattern","editor","template","BlockEditorContents","props","blocks","updateBlocksWithoutUndo","updateBlocksWithUndo","selection","isEditing","editorMode","children","renderMoreMenu","onLoad","loadData","initialContent","length","isInitialContent","select","getBlocks","getEditorSelection","getEditorMode","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport isPromise from 'is-promise';\n\n/**\n * WordPress dependencies\n */\nimport { Popover } from '@wordpress/components';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport { parse, rawHandler } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { BlockEditorProvider } from '@wordpress/block-editor';\nimport BlockEditor from '../block-editor';\nimport getInitialEditorContent from './editor-content';\n\n/** @typedef {import('../../store/editor/reducer').EditorMode} EditorMode */\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../index').OnLoad} OnLoad */\n/** @typedef {import('../../index').OnMore} OnMore */\n\n/**\n * Get editor selection\n * @callback OnSelection\n */\n\n/**\n * Update callback\n * @callback OnUpdate\n * @param {object[]} blocks - Editor content to save\n * @param {object} [options]\n */\nasync function getInitialContent( settings, loader ) {\n\tconst contentLoader = isPromise( loader )\n\t\t? loader\n\t\t: new Promise( ( resolve ) => {\n\t\t\t\tresolve( loader ? loader( parse, rawHandler ) : [] );\n\t\t  } );\n\n\treturn contentLoader.then( ( content ) => {\n\t\treturn getInitialEditorContent(\n\t\t\tsettings.iso.patterns,\n\t\t\tsettings.iso.currentPattern,\n\t\t\tsettings.editor.template,\n\t\t\tcontent\n\t\t);\n\t} );\n}\n\n/**\n * The editor itself, including toolbar\n *\n * @param {object} props - Component props\n * @param {object[]} props.blocks\n * @param {OnUpdate} props.updateBlocksWithoutUndo - Callback to update blocks\n * @param {OnUpdate} props.updateBlocksWithUndo - Callback to update blocks\n * @param {boolean} props.isEditing - Are we editing in this editor?\n * @param {EditorMode} props.editorMode - Visual or code?\n * @param {object} props.children - Child components\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {OnMore} props.renderMoreMenu - Callback to render additional items in the more menu\n * @param {OnSelection} props.selection\n * @param {OnLoad} props.onLoad - Load initial blocks\n */\nfunction BlockEditorContents( props ) {\n\tconst { blocks, updateBlocksWithoutUndo, updateBlocksWithUndo, selection, isEditing, editorMode } = props;\n\tconst { children, settings, renderMoreMenu, onLoad } = props;\n\n\t// Set initial content, if we have any, but only if there is no existing data in the editor (from elsewhere)\n\tuseEffect( () => {\n\t\tconst loadData = async () => {\n\t\t\tconst initialContent = await getInitialContent( settings, onLoad );\n\n\t\t\tif ( initialContent.length > 0 && ( ! blocks || blocks.length === 0 ) ) {\n\t\t\t\tupdateBlocksWithoutUndo( initialContent, { isInitialContent: true } );\n\t\t\t}\n\t\t};\n\n\t\tloadData();\n\t}, [] );\n\n\treturn (\n\t\t<BlockEditorProvider\n\t\t\tvalue={ blocks || [] }\n\t\t\tonInput={ updateBlocksWithoutUndo }\n\t\t\tonChange={ updateBlocksWithUndo }\n\t\t\tuseSubRegistry={ false }\n\t\t\tselection={ selection }\n\t\t\tsettings={ settings.editor }\n\t\t>\n\t\t\t<BlockEditor\n\t\t\t\tisEditing={ isEditing }\n\t\t\t\teditorMode={ editorMode }\n\t\t\t\tsettings={ settings }\n\t\t\t\trenderMoreMenu={ renderMoreMenu }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</BlockEditor>\n\n\t\t\t<Popover.Slot />\n\t\t</BlockEditorProvider>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getBlocks, getEditorSelection, getEditorMode, isEditing } = select( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tblocks: getBlocks(),\n\t\t\tselection: getEditorSelection(),\n\t\t\tisEditing: isEditing(),\n\t\t\teditorMode: getEditorMode(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateBlocksWithUndo, updateBlocksWithoutUndo } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tupdateBlocksWithUndo,\n\t\t\tupdateBlocksWithoutUndo,\n\t\t};\n\t} ),\n] )( BlockEditorContents );\n"],"file":"index.js"}