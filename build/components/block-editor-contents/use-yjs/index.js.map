{"version":3,"sources":["../../../../src/components/block-editor-contents/use-yjs/index.js"],"names":["debug","require","DEBOUNCE_WAIT_MS","defaultColors","initYDoc","getBlocks","onRemoteDataChange","settings","getSelection","setPeerSelection","setAvailablePeers","channelId","transport","identity","doc","applyDataChanges","updatePostDoc","getData","postDocToObject","sendMessage","message","type","selectionStart","selectionEnd","selection","start","end","onReceiveMessage","data","receiveMessage","changes","blocks","connect","user","name","username","color","caretColor","peers","then","isFirstInChannel","startSharing","title","disconnect","window","addEventListener","useYjs","applyChangesToYjs","noop","select","getEditorSelection","enabled","console","error","onUnmount","current"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { v4 as uuidv4 } from 'uuid';\nimport { debounce, noop, sample } from 'lodash';\nimport { createDocument } from './yjs-doc';\nimport { postDocToObject, updatePostDoc } from './algorithms/yjs';\n\n/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\nimport { registerFormatCollabCaret } from '../../formats/collab-caret';\n\nconst debug = require( 'debug' )( 'iso-editor:collab' );\n\n/** @typedef {import('../../..').CollaborationSettings} CollaborationSettings */\n/** @typedef {import('../../..').CollaborationTransport} CollaborationTransport */\n/** @typedef {import('../../..').CollaborationTransportDocMessage} CollaborationTransportDocMessage */\n/** @typedef {import('../../..').CollaborationTransportSelectionMessage} CollaborationTransportSelectionMessage */\n/** @typedef {import('../../..').EditorSelection} EditorSelection */\n/** @typedef {import('..').OnUpdate} OnUpdate */\n\nconst DEBOUNCE_WAIT_MS = 800;\nconst defaultColors = [ '#4676C0', '#6F6EBE', '#9063B6', '#C3498D', '#9E6D14', '#3B4856', '#4A807A' ];\n\n/**\n * @param {object} opts - Hook options\n * @param {() => object[]} opts.getBlocks - Content to initialize the Yjs doc with.\n * @param {OnUpdate} opts.onRemoteDataChange - Function to update editor blocks in redux state.\n * @param {CollaborationSettings} opts.settings\n * @param {() => IsoEditorSelection} opts.getSelection\n * @param {import('../../../store/peers/actions').setAvailablePeers} opts.setAvailablePeers\n * @param {import('../../../store/peers/actions').setPeerSelection} opts.setPeerSelection\n *\n * @typedef IsoEditorSelection\n * @property {object} selectionStart\n * @property {object} selectionEnd\n */\nasync function initYDoc( {\n\tgetBlocks,\n\tonRemoteDataChange,\n\tsettings,\n\tgetSelection,\n\tsetPeerSelection,\n\tsetAvailablePeers,\n} ) {\n\tconst { channelId, transport } = settings;\n\n\t/** @type string */\n\tconst identity = uuidv4();\n\n\tdebug( `initYDoc (identity: ${ identity })` );\n\n\tconst doc = createDocument( {\n\t\tidentity,\n\t\tapplyDataChanges: updatePostDoc,\n\t\tgetData: postDocToObject,\n\t\t/** @param {object} message */\n\t\tsendMessage: ( message ) => {\n\t\t\tdebug( 'sendDocMessage', message );\n\t\t\ttransport.sendMessage( { type: 'doc', identity, message } );\n\n\t\t\tconst { selectionStart, selectionEnd } = getSelection() || {};\n\t\t\tdebug( 'sendSelection', selectionStart, selectionEnd );\n\t\t\ttransport.sendMessage( {\n\t\t\t\ttype: 'selection',\n\t\t\t\tidentity,\n\t\t\t\tselection: {\n\t\t\t\t\tstart: selectionStart,\n\t\t\t\t\tend: selectionEnd,\n\t\t\t\t},\n\t\t\t} );\n\t\t},\n\t} );\n\n\t/** @param {CollaborationTransportDocMessage|CollaborationTransportSelectionMessage} data */\n\tconst onReceiveMessage = ( data ) => {\n\t\tdebug( 'remote change received by transport', data );\n\n\t\tswitch ( data.type ) {\n\t\t\tcase 'doc': {\n\t\t\t\tdoc.receiveMessage( data.message );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'selection': {\n\t\t\t\tsetPeerSelection( data.identity, data.selection );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tdoc.onRemoteDataChange( ( changes ) => {\n\t\tdebug( 'remote change received by ydoc', changes );\n\t\tonRemoteDataChange( changes.blocks );\n\t} );\n\n\treturn transport\n\t\t.connect( {\n\t\t\tuser: {\n\t\t\t\tidentity,\n\t\t\t\tname: settings.username,\n\t\t\t\tcolor: settings.caretColor || sample( defaultColors ),\n\t\t\t},\n\t\t\tonReceiveMessage,\n\t\t\tsetAvailablePeers: ( peers ) => {\n\t\t\t\tdebug( 'setAvailablePeers', peers );\n\t\t\t\tsetAvailablePeers( peers );\n\t\t\t},\n\t\t\tchannelId,\n\t\t} )\n\t\t.then( ( { isFirstInChannel } ) => {\n\t\t\tdebug( `connected (channelId: ${ channelId })` );\n\n\t\t\tif ( isFirstInChannel ) {\n\t\t\t\tdebug( 'first in channel' );\n\n\t\t\t\t// Fetching the blocks from redux now, after the transport has successfully connected,\n\t\t\t\t// ensures that we don't initialize the Yjs doc with stale blocks.\n\t\t\t\t// (This can happen if <IsolatedBlockEditor> is given an onLoad handler.)\n\t\t\t\tdoc.startSharing( { title: '', blocks: getBlocks() } );\n\t\t\t} else {\n\t\t\t\tdoc.connect();\n\t\t\t}\n\n\t\t\tconst disconnect = () => {\n\t\t\t\ttransport.disconnect();\n\t\t\t\tdoc.disconnect();\n\t\t\t};\n\n\t\t\twindow.addEventListener( 'beforeunload', () => disconnect() );\n\n\t\t\treturn { doc, disconnect };\n\t\t} );\n}\n\n/**\n * @param {object} opts - Hook options\n * @param {object[]} opts.blocks\n * @param {OnUpdate} opts.onRemoteDataChange\n * @param {CollaborationSettings} [opts.settings]\n */\nexport default function useYjs( { blocks, onRemoteDataChange, settings } ) {\n\tconst applyChangesToYjs = useRef( noop );\n\n\tconst { getBlocks, getSelection } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tgetSelection: select( 'isolated/editor' ).getEditorSelection,\n\t\t\tgetBlocks: select( 'isolated/editor' ).getBlocks,\n\t\t};\n\t}, [] );\n\n\tconst { setAvailablePeers, setPeerSelection } = useDispatch( 'isolated/editor' );\n\n\tuseEffect( () => {\n\t\tif ( ! settings?.enabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! settings.transport ) {\n\t\t\tconsole.error( `Collaborative editor is disabled because a transport module wasn't provided.` );\n\t\t\treturn;\n\t\t}\n\n\t\tdebug( 'registered collab caret format' );\n\t\tregisterFormatCollabCaret();\n\n\t\tlet onUnmount = noop;\n\n\t\tinitYDoc( {\n\t\t\tonRemoteDataChange,\n\t\t\tsettings,\n\t\t\tgetBlocks,\n\t\t\tgetSelection,\n\t\t\tsetPeerSelection,\n\t\t\tsetAvailablePeers,\n\t\t} ).then( ( { doc, disconnect } ) => {\n\t\t\tonUnmount = () => {\n\t\t\t\tdebug( 'unmount' );\n\t\t\t\tdisconnect();\n\t\t\t};\n\n\t\t\tapplyChangesToYjs.current = debounce( ( blocks ) => {\n\t\t\t\tdebug( 'local changes applied to ydoc' );\n\n\t\t\t\tdoc.applyDataChanges( { blocks } );\n\t\t\t}, DEBOUNCE_WAIT_MS );\n\t\t} );\n\n\t\treturn () => onUnmount();\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tapplyChangesToYjs.current( blocks );\n\t}, [ blocks ] );\n}\n"],"file":"index.js"}