{"version":3,"sources":["../../../src/components/block-editor/index.js"],"names":["BlockEditor","props","isEditing","editorMode","children","undo","redo","rawShortcut","primary","primaryShift","dispatch"],"mappings":";;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;AACA;;AACA;;;;AAhBA;AACA;AACA;;AAOA;AACA;AACA;;AAOA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,CAAsBC,KAAtB,EAA8B;AAAA;;AAC7B,MAAQC,SAAR,GAAwDD,KAAxD,CAAQC,SAAR;AAAA,MAAmBC,UAAnB,GAAwDF,KAAxD,CAAmBE,UAAnB;AAAA,MAA+BC,QAA/B,GAAwDH,KAAxD,CAA+BG,QAA/B;AAAA,MAAyCC,IAAzC,GAAwDJ,KAAxD,CAAyCI,IAAzC;AAAA,MAA+CC,IAA/C,GAAwDL,KAAxD,CAA+CK,IAA/C;AAEA,SACC,8BACC,cAAC,0BAAD,OADD,EAEC,cAAC,qBAAD,OAFD,EAIGJ,SAAS,IACV,8BACC,cAAC,yCAAD,OADD,EAEC,cAAC,yCAAD,CAA8B,QAA9B,OAFD,CALF,EAWC,cAAC,6BAAD;AACC,IAAA,UAAU,EAAG,KADd;AAEC,IAAA,SAAS,qDACNK,sBAAYC,OAAZ,CAAqB,GAArB,CADM,EACwBH,IADxB,0CAENE,sBAAYE,YAAZ,CAA0B,GAA1B,CAFM,EAE6BH,IAF7B;AAFV,KAOGH,UAAU,KAAK,QAAf,IAA2B,cAAC,wBAAD,OAP9B,EAQGA,UAAU,KAAK,MAAf,IAAyB,cAAC,sBAAD,OAR5B,CAXD,EAsBGC,QAtBH,CADD;AA0BA;;eAEc,wBAAc,UAAEM,QAAF,EAAgB;AAC5C,kBAAuBA,QAAQ,CAAE,iBAAF,CAA/B;AAAA,MAAQJ,IAAR,aAAQA,IAAR;AAAA,MAAcD,IAAd,aAAcA,IAAd;;AAEA,SAAO;AACNC,IAAAA,IAAI,EAAJA,IADM;AAEND,IAAAA,IAAI,EAAJA;AAFM,GAAP;AAIA,CAPc,EAOVL,WAPU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { withDispatch } from '@wordpress/data';\nimport { KeyboardShortcuts } from '@wordpress/components';\nimport { rawShortcut } from '@wordpress/keycodes';\nimport { BlockEditorKeyboardShortcuts } from '@wordpress/block-editor';\nimport { EditorNotices } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\n\nimport VisualEditor from './visual-editor';\nimport TextEditor from './text-editor';\nimport FullscreenMode from './fullscreen-mode';\nimport './style.scss';\n\n/** @typedef {import('../../store/editor/reducer').EditorMode} EditorMode */\n\n/**\n * Undo/redo\n * @callback OnHistory\n */\n\n/**\n * The editor component. Contains the visual or text editor, along with keyboard handling.\n *\n * Note: the keyboard handling is specific to this editor and *not* global\n *\n * @param {object} props - Component props\n * @param {boolean} props.isEditing - Are we editing in this editor?\n * @param {EditorMode} props.editorMode - Visual or code?\n * @param {object} props.children - Child components\n * @param {OnHistory} props.undo\n * @param {OnHistory} props.redo\n */\nfunction BlockEditor( props ) {\n\tconst { isEditing, editorMode, children, undo, redo } = props;\n\n\treturn (\n\t\t<>\n\t\t\t<FullscreenMode />\n\t\t\t<EditorNotices />\n\n\t\t\t{ isEditing && (\n\t\t\t\t<>\n\t\t\t\t\t<BlockEditorKeyboardShortcuts />\n\t\t\t\t\t<BlockEditorKeyboardShortcuts.Register />\n\t\t\t\t</>\n\t\t\t) }\n\n\t\t\t<KeyboardShortcuts\n\t\t\t\tbindGlobal={ false }\n\t\t\t\tshortcuts={ {\n\t\t\t\t\t[ rawShortcut.primary( 'z' ) ]: undo,\n\t\t\t\t\t[ rawShortcut.primaryShift( 'z' ) ]: redo,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ editorMode === 'visual' && <VisualEditor /> }\n\t\t\t\t{ editorMode === 'text' && <TextEditor /> }\n\t\t\t</KeyboardShortcuts>\n\n\t\t\t{ children }\n\t\t</>\n\t);\n}\n\nexport default withDispatch( ( dispatch ) => {\n\tconst { redo, undo } = dispatch( 'isolated/editor' );\n\n\treturn {\n\t\tredo,\n\t\tundo,\n\t};\n} )( BlockEditor );\n"],"file":"index.js"}