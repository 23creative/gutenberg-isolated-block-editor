{"version":3,"sources":["../../../src/components/editor-loaded/index.js"],"names":["EditorLoaded","onLoaded","onLoading","select","isEditorReady"],"mappings":";;;;;;;AAIA;;AACA;;AALA;AACA;AACA;;AAKA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,OAAiD;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,SAAc,QAAdA,SAAc;;AAAA,mBACtB,qBACzB,UAAEC,MAAF;AAAA,WAAgB;AACfC,MAAAA,aAAa,EAAED,MAAM,CAAE,iBAAF,CAAN,CAA4BC,aAA5B;AADA,KAAhB;AAAA,GADyB,EAIzB,EAJyB,CADsB;AAAA,MACxCA,aADwC,cACxCA,aADwC;;AAQhD,0BAAW,YAAM;AAChB,QAAKA,aAAL,EAAqB;AACpBH,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACA,KAFD,MAEO;AACNC,MAAAA,SAAS,IAAIA,SAAS,EAAtB;AACA;AACD,GAND,EAMG,CAAEE,aAAF,CANH;AAQA,SAAO,IAAP;AACA;;eAEcJ,Y","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * @callback OnLoad\n */\n\n /**\n * Used by clients to add an optional loading placeholder\n *\n * @param {object} props - Component props\n * @param {OnLoad} [props.onLoaded] - Callback to signal that the editor has loaded\n * @param {OnLoad} [props.onLoading] - Callback to signal that the editor is loading\n */\nfunction EditorLoaded( { onLoaded, onLoading } ) {\n\tconst { isEditorReady } = useSelect(\n\t\t( select ) => ( {\n\t\t\tisEditorReady: select( 'isolated/editor' ).isEditorReady(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tuseEffect( () => {\n\t\tif ( isEditorReady ) {\n\t\t\tonLoaded && onLoaded();\n\t\t} else {\n\t\t\tonLoading && onLoading();\n\t\t}\n\t}, [ isEditorReady ] );\n\n\treturn null;\n}\n\nexport default EditorLoaded;\n"],"file":"index.js"}