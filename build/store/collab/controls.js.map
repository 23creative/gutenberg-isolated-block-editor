{"version":3,"sources":["../../../src/store/collab/controls.js"],"names":["debugUndo","require","applyChangesToYDoc","registry","action","doc","select","getYDoc","isTriggeredByYDoc","blocks","isInitialContent","UPDATE_BLOCKS_WITH_UNDO","UPDATE_BLOCKS_WITHOUT_UNDO","ActionCreators","undo","type","undoManager","getUndoManager","redo"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAE,OAAF,CAAP,CAAoB,wBAApB,CAAlB;;AAEA,IAAMC,kBAAkB,GAAG,iCAAuB,UAAEC,QAAF;AAAA,SAAgB,UAAEC,MAAF,EAAc;AAC/E,QAAMC,GAAG,GAAGF,QAAQ,CAACG,MAAT,CAAiB,iBAAjB,EAAqCC,OAArC,EAAZ;;AAEA,QAAKF,GAAG,IAAI,CAAED,MAAM,CAACI,iBAArB,EAAyC;AACxCH,MAAAA,GAAG,CAACH,kBAAJ,CAAwB;AAAEO,QAAAA,MAAM,EAAEL,MAAM,CAACK;AAAjB,OAAxB,EAAmD;AAAEC,QAAAA,gBAAgB,EAAEN,MAAM,CAACM;AAA3B,OAAnD;AACA;;AAED,WAAON,MAAP;AACA,GARiD;AAAA,CAAvB,CAA3B;;;AAWCO,EAAAA,uBAAuB,EAAET,kB;AACzBU,EAAAA,0BAA0B,EAAEV;2DAE1BW,0BAAeC,IAAf,GAAsBC,I,EAAQ,iCAAuB,UAAEZ,QAAF;AAAA,SAAgB,UAAEC,MAAF,EAAc;AACpF,QAAMY,WAAW,GAAGb,QAAQ,CAACG,MAAT,CAAiB,iBAAjB,EAAqCW,cAArC,EAApB;;AAEA,QAAK,CAAED,WAAP,EAAqB;AACpB,aAAOZ,MAAP;AACA;;AAEDJ,IAAAA,SAAS,CAAE,MAAF,CAAT;AACAgB,IAAAA,WAAW,CAACF,IAAZ;AACA,WAToF,CAS5E;AACR,GAVsD;AAAA,CAAvB,C,2DAY9BD,0BAAeK,IAAf,GAAsBH,I,EAAQ,iCAAuB,UAAEZ,QAAF;AAAA,SAAgB,UAAEC,MAAF,EAAc;AACpF,QAAMY,WAAW,GAAGb,QAAQ,CAACG,MAAT,CAAiB,iBAAjB,EAAqCW,cAArC,EAApB;;AAEA,QAAK,CAAED,WAAP,EAAqB;AACpB,aAAOZ,MAAP;AACA;;AAEDJ,IAAAA,SAAS,CAAE,MAAF,CAAT;AACAG,IAAAA,QAAQ,CAACG,MAAT,CAAiB,iBAAjB,EAAqCW,cAArC,GAAsDC,IAAtD;AACA,WAToF,CAS5E;AACR,GAVsD;AAAA,CAAvB,C","sourcesContent":["import { ActionCreators } from 'redux-undo';\n\nimport { createRegistryControl } from '@wordpress/data';\n\nconst debugUndo = require( 'debug' )( 'iso-editor:collab:undo' );\n\nconst applyChangesToYDoc = createRegistryControl( ( registry ) => ( action ) => {\n\tconst doc = registry.select( 'isolated/editor' ).getYDoc();\n\n\tif ( doc && ! action.isTriggeredByYDoc ) {\n\t\tdoc.applyChangesToYDoc( { blocks: action.blocks }, { isInitialContent: action.isInitialContent } );\n\t}\n\n\treturn action;\n} );\n\nexport default {\n\tUPDATE_BLOCKS_WITH_UNDO: applyChangesToYDoc,\n\tUPDATE_BLOCKS_WITHOUT_UNDO: applyChangesToYDoc,\n\n\t[ ActionCreators.undo().type ]: createRegistryControl( ( registry ) => ( action ) => {\n\t\tconst undoManager = registry.select( 'isolated/editor' ).getUndoManager();\n\n\t\tif ( ! undoManager ) {\n\t\t\treturn action;\n\t\t}\n\n\t\tdebugUndo( 'undo' );\n\t\tundoManager.undo();\n\t\treturn; // prevent default action\n\t} ),\n\n\t[ ActionCreators.redo().type ]: createRegistryControl( ( registry ) => ( action ) => {\n\t\tconst undoManager = registry.select( 'isolated/editor' ).getUndoManager();\n\n\t\tif ( ! undoManager ) {\n\t\t\treturn action;\n\t\t}\n\n\t\tdebugUndo( 'redo' );\n\t\tregistry.select( 'isolated/editor' ).getUndoManager().redo();\n\t\treturn; // prevent default action\n\t} ),\n};\n"],"file":"controls.js"}