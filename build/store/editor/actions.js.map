{"version":3,"sources":["../../../src/store/editor/actions.js"],"names":["actions","setReady","isReady","type","setEditorMode","editorMode","setupEditor","settings","setCurrentPattern","pattern","setIsInserterOpened","isOpen","setEditing","isEditing","setInspecting"],"mappings":";;;;;;;AAAA;;AACA;AAEA,IAAMA,OAAO,GAAG;AACf;AACD;AACA;AACA;AACCC,EAAAA,QALe,oBAKLC,OALK,EAKK;AACnB,WAAO;AACNC,MAAAA,IAAI,EAAE,kBADA;AAEND,MAAAA,OAAO,EAAPA;AAFM,KAAP;AAIA,GAVc;;AAWf;AACD;AACA;AACA;AACCE,EAAAA,aAfe,yBAeAC,UAfA,EAea;AAC3B,WAAO;AACNF,MAAAA,IAAI,EAAE,iBADA;AAENE,MAAAA,UAAU,EAAVA;AAFM,KAAP;AAIA,GApBc;;AAqBf;AACD;AACA;AACA;AACCC,EAAAA,WAzBe,uBAyBFC,QAzBE,EAyBS;AACvB,WAAO;AACNJ,MAAAA,IAAI,EAAE,cADA;AAENI,MAAAA,QAAQ,EAARA;AAFM,KAAP;AAIA,GA9Bc;;AA+Bf;AACD;AACA;AACA;AACCC,EAAAA,iBAnCe,6BAmCIC,OAnCJ,EAmCc;AAC5B,WAAO;AACNN,MAAAA,IAAI,EAAE,qBADA;AAENM,MAAAA,OAAO,EAAPA;AAFM,KAAP;AAIA,GAxCc;;AAyCf;AACD;AACA;AACA;AACCC,EAAAA,mBA7Ce,+BA6CMC,MA7CN,EA6Ce;AAC7B,WAAO;AACNR,MAAAA,IAAI,EAAE,mBADA;AAENQ,MAAAA,MAAM,EAANA;AAFM,KAAP;AAIA,GAlDc;;AAmDf;AACD;AACA;AACA;AACCC,EAAAA,UAvDe,sBAuDHC,SAvDG,EAuDS;AACvB,WAAO;AACNV,MAAAA,IAAI,EAAE,aADA;AAENU,MAAAA,SAAS,EAATA;AAFM,KAAP;AAIA,GA5Dc;;AA6Df;AACD;AACA;AACA;AACCC,EAAAA,aAjEe,yBAiEAH,MAjEA,EAiES;AACvB,WAAO;AACNR,MAAAA,IAAI,EAAE,oBADA;AAENQ,MAAAA,MAAM,EAANA;AAFM,KAAP;AAIA;AAtEc,CAAhB;eAyEeX,O","sourcesContent":["/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('./reducer').EditorMode} EditorMode */\n\nconst actions = {\n\t/**\n\t * Set whether the editor is ready for editing\n\t * @param {boolean} isReady\n\t */\n\tsetReady( isReady ) {\n\t\treturn {\n\t\t\ttype: 'SET_EDITOR_READY',\n\t\t\tisReady,\n\t\t};\n\t},\n\t/**\n\t * Set the current editor mode\n\t * @param {EditorMode} editorMode Editor mode\n\t */\n\tsetEditorMode( editorMode ) {\n\t\treturn {\n\t\t\ttype: 'SET_EDITOR_MODE',\n\t\t\teditorMode,\n\t\t};\n\t},\n\t/**\n\t * Set up the editor\n\t * @param {BlockEditorSettings} settings\n\t */\n\tsetupEditor( settings ) {\n\t\treturn {\n\t\t\ttype: 'SETUP_EDITOR',\n\t\t\tsettings,\n\t\t};\n\t},\n\t/**\n\t * Set the current pattern name\n\t * @param {string} pattern Pattern name\n\t */\n\tsetCurrentPattern( pattern ) {\n\t\treturn {\n\t\t\ttype: 'SET_CURRENT_PATTERN',\n\t\t\tpattern,\n\t\t};\n\t},\n\t/**\n\t * Mark the block inserter as open or closed\n\t * @param {boolean} isOpen\n\t */\n\tsetIsInserterOpened( isOpen ) {\n\t\treturn {\n\t\t\ttype: 'SET_INSERTER_OPEN',\n\t\t\tisOpen,\n\t\t};\n\t},\n\t/**\n\t * Mark this editor as in-use or not\n\t * @param {boolean} isEditing\n\t */\n\tsetEditing( isEditing ) {\n\t\treturn {\n\t\t\ttype: 'SET_EDITING',\n\t\t\tisEditing,\n\t\t};\n\t},\n\t/**\n\t * Mark the block inserter as open or closed\n\t * @param {boolean} isOpen\n\t */\n\tsetInspecting( isOpen ) {\n\t\treturn {\n\t\t\ttype: 'SET_INSPECTOR_OPEN',\n\t\t\tisOpen,\n\t\t};\n\t},\n};\n\nexport default actions;\n"],"file":"actions.js"}