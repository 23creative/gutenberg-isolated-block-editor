{"version":3,"sources":["../../src/browser/index.js"],"names":["settings","iso","moreMenu","saveBlocks","content","textarea","value","onLoad","parser","rawHandler","indexOf","HTML","attachEditor","type","toLowerCase","editor","document","createElement","classList","add","parentNode","insertBefore","nextSibling","style","display","location","reload","detachEditor","contains","removeChild","window","wp"],"mappings":";;;;AAIA;;AAMA;;AACA;;;;AAXA;AACA;AACA;;AAIA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAMA,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADW,CAAjB;AAMA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAqBC,OAArB,EAA8BC,QAA9B,EAAyC;AACxCA,EAAAA,QAAQ,CAACC,KAAT,GAAiBF,OAAjB;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,OAAT,CAAiBH,OAAjB,EAA0BI,MAA1B,EAAkCC,UAAlC,EAA+C;AAC9C;AACA,MAAKL,OAAO,CAACM,OAAR,CAAiB,MAAjB,MAA8B,CAAC,CAApC,EAAwC;AACvC;AACA,WAAOF,MAAM,CAAEJ,OAAF,CAAb;AACA,GAL6C,CAO9C;;;AACA,SAAOK,UAAU,CAAE;AAAEE,IAAAA,IAAI,EAAEP;AAAR,GAAF,CAAjB;AACA;AAED;AACA;AACA;AACA;;;AACA,SAASQ,YAAT,CAAuBP,QAAvB,EAAkC;AACjC;AACA,MAAKA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,OAAgC,UAArC,EAAkD;AACjD;AACA,GAJgC,CAMjC;;;AACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAf;AACAF,EAAAA,MAAM,CAACG,SAAP,CAAiBC,GAAjB,CAAsB,QAAtB,EARiC,CAUjC;;AACAd,EAAAA,QAAQ,CAACe,UAAT,CAAoBC,YAApB,CAAkCN,MAAlC,EAA0CV,QAAQ,CAACiB,WAAnD;AACAjB,EAAAA,QAAQ,CAACkB,KAAT,CAAeC,OAAf,GAAyB,MAAzB,CAZiC,CAcjC;;AACA,uBACC,cAAC,iBAAD;AACC,IAAA,QAAQ,EAAGxB,QADZ;AAEC,IAAA,MAAM,EAAG,gBAAEQ,MAAF,EAAUC,UAAV;AAAA,aAA0BF,OAAM,CAAEF,QAAQ,CAACC,KAAX,EAAkBE,MAAlB,EAA0BC,UAA1B,CAAhC;AAAA,KAFV;AAGC,IAAA,aAAa,EAAG,uBAAEL,OAAF;AAAA,aAAeD,UAAU,CAAEC,OAAF,EAAWC,QAAX,CAAzB;AAAA,KAHjB;AAIC,IAAA,OAAO,EAAG;AAAA,aAAMW,QAAQ,CAACS,QAAT,CAAkBC,MAAlB,EAAN;AAAA;AAJX,IADD,EAOCX,MAPD;AASA;AAED;AACA;AACA;AACA;;;AACA,SAASY,YAAT,CAAuBtB,QAAvB,EAAkC;AACjC;AACD;AACA;AACC,MAAMU,MAAM,GAAGV,QAAQ,CAACiB,WAAxB;;AAEA,MAAKP,MAAM,IAAIA,MAAM,CAACG,SAAP,CAAiBU,QAAjB,CAA2B,QAA3B,CAAf,EAAuD;AACtD,yCAAwBb,MAAxB;AACAV,IAAAA,QAAQ,CAACkB,KAAT,CAAeC,OAAf,GAAyB,IAAzB;AACAT,IAAAA,MAAM,CAACK,UAAP,CAAkBS,WAAlB,CAA+Bd,MAA/B;AACA;AACD,C,CAED;;;AACAe,MAAM,CAACC,EAAP,GAAY;AACXnB,EAAAA,YAAY,EAAZA,YADW;AAEXe,EAAAA,YAAY,EAAZA;AAFW,CAAZ","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { render, unmountComponentAtNode } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\n\nimport IsolatedBlockEditor from '../index';\nimport './style.scss';\n\n/** @typedef {import('isolated-block-editor').BlockEditorSettings} BlockEditorSettings */\n\n/**\n * These are the Gutenberg and IsolatedBlockEditor settings. Everything not set uses the defaults.\n *\n * @type BlockEditorSettings\n */\nconst settings = {\n\tiso: {\n\t\tmoreMenu: false,\n\t},\n};\n\n/**\n * Saves content to the textarea\n * @param {string} content Serialized block content\n * @param {HTMLTextAreaElement} textarea Textarea node\n */\nfunction saveBlocks( content, textarea ) {\n\ttextarea.value = content;\n}\n\n/**\n * Initial content loader. Determine if the textarea contains blocks or raw HTML\n * @param {string} content Text area content\n * @param {*} parser Gutenberg `parse` function\n * @param {*} rawHandler Gutenberg `rawHandler` function\n */\nfunction onLoad( content, parser, rawHandler ) {\n\t// Does the content contain blocks?\n\tif ( content.indexOf( '<!--' ) !== -1 ) {\n\t\t// Parse the blocks\n\t\treturn parser( content );\n\t}\n\n\t// Raw HTML - do our best\n\treturn rawHandler( { HTML: content } );\n}\n\n/**\n * Attach IsolatedBlockEditor to a textarea\n * @param {HTMLTextAreaElement} textarea Textarea node\n */\nfunction attachEditor( textarea ) {\n\t// Check it's a textarea\n\tif ( textarea.type.toLowerCase() !== 'textarea' ) {\n\t\treturn;\n\t}\n\n\t// Create a node after the textarea\n\tconst editor = document.createElement( 'div' );\n\teditor.classList.add( 'editor' );\n\n\t// Insert after the textarea, and hide it\n\ttextarea.parentNode.insertBefore( editor, textarea.nextSibling );\n\ttextarea.style.display = 'none';\n\n\t// Render the editor\n\trender(\n\t\t<IsolatedBlockEditor\n\t\t\tsettings={ settings }\n\t\t\tonLoad={ ( parser, rawHandler ) => onLoad( textarea.value, parser, rawHandler ) }\n\t\t\tonSaveContent={ ( content ) => saveBlocks( content, textarea ) }\n\t\t\tonError={ () => document.location.reload() }\n\t\t></IsolatedBlockEditor>,\n\t\teditor\n\t);\n}\n\n/**\n * Remove IsolatedBlockEditor from a textarea node\n * @param {HTMLTextAreaElement} textarea Textarea node\n */\nfunction detachEditor( textarea ) {\n\t/**\n\t * @type {HTMLElement}\n\t */\n\tconst editor = textarea.nextSibling;\n\n\tif ( editor && editor.classList.contains( 'editor' ) ) {\n\t\tunmountComponentAtNode( editor );\n\t\ttextarea.style.display = null;\n\t\teditor.parentNode.removeChild( editor );\n\t}\n}\n\n// This adds the functions to the WP global, making it easier for the example to work.\nwindow.wp = {\n\tattachEditor,\n\tdetachEditor,\n};\n"],"file":"index.js"}